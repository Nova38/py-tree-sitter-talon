[build-system]
requires = ["setuptools", "poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry]
name = "tree_sitter_talon"
build = "build.py"
version = "1!1000.2.0.0"
description = "Parser for Talon files in Python."
license = "MIT"
authors = ["Wen Kokke <wenkokke@users.noreply.github.com>"]
readme = "README.md"
repository = "https://github.com/wenkokke/py-tree-sitter-talon"
documentation = "https://wenkokke.github.io/py-tree-sitter-talon/"
keywords = ["parser", "tree-sitter", "talon"]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Topic :: Software Development :: Compilers",
]

[tool.poetry.dependencies]
python = "^3.9"
tree-sitter = "^0.20.0"
tree-sitter-type-provider = "^2.1.7"
dataclasses-json = "^0.5.7"
bumpver = { version = "*", optional = true }
mypy = { version = "^0.971", optional = true }
pytest = { version = "^7.1.2", optional = true }
pytest-golden = { version = "^0.2.2", optional = true }
Sphinx = { version = "^5.1.1", optional = true }
sphinx-bootstrap-theme = { version = "^0.8.1", optional = true }

[tool.poetry.extras]
dev = ["bumpver"]
docs = ["Sphinx", "sphinx-bootstrap-theme"]
test = ["mypy", "pytest", "pytest-golden"]

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "pep440"

[tool.cibuildwheel]
manylinux-x86_64-image = "manylinux_2_24"
manylinux-i686-image = "manylinux_2_24"
manylinux-aarch64-image = "manylinux_2_24"
manylinux-ppc64le-image = "manylinux_2_24"
manylinux-s390x-image = "manylinux_2_24"
manylinux-pypy_x86_64-image = "manylinux_2_24"
manylinux-pypy_i686-image = "manylinux_2_24"
manylinux-pypy_aarch64-image = "manylinux_2_24"

[pytest]
testpaths = "tests"

[tool.pytest.ini_options]
enable_assertion_pass_hook = true
filterwarnings = ["ignore::DeprecationWarning:.*:"]
addopts = "--ignore=tests/data"

[tool.mypy]
python_version = 3.9
ignore_missing_imports = true

[tool.bumpver]
current_version = "1000"
version_pattern = "BUILD"
commit_message = "Bump build number {old_version} -> {new_version}"
commit = true
tag = false
push = true

[tool.bumpver.file_patterns]
"pyproject.toml" = ['current_version = "{version}"']

[tool.tox]
legacy_tox_ini = """
[tox]
requires =
  tox-poetry
envlist = py39,py310
isolated_build = True

[testenv]
wheel=true
extras =
  test
commands =
  pytest tests/
  stubtest --mypy-config-file pyproject.toml tree_sitter_talon
"""
