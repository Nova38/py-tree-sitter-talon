input: |
  tag: user.code_comment_block
  -
  block comment: user.code_comment_block()
  block comment line:
      #todo: this should probably be a single function once
      #.talon supports implementing actions with parameters?
      edit.line_start()
      user.code_comment_block_prefix()
      key(space)
      edit.line_end()
      key(space)
      user.code_comment_block_suffix()
  #adds comment to the start of the line
  block comment line <user.text> over:
      #todo: this should probably be a single function once
      #.talon supports implementing actions with parameters?
      edit.line_start()
      user.code_comment_block()
      insert(user.text)
  block comment <user.text> over:
      #todo: this should probably be a single function once
      #.talon supports implementing actions with parameters?
      user.code_comment_block()
      insert(user.text)
  block comment <user.text>$:
      #todo: this should probably be a single function once
      #.talon supports implementing actions with parameters?
      user.code_comment_block()
      insert(user.text)
  (line | inline) block comment <user.text> over:
      #todo: this should probably be a single function once
      #.talon supports implementing actions with parameters?
      edit.line_end()
      user.code_comment_block_prefix()
      key(space)
      insert(user.text)
      key(space)
      user.code_comment_block_suffix()
  (line | inline) block comment <user.text>$:
      #todo: this should probably be a single function once
      #.talon supports implementing actions with parameters?
      edit.line_end()
      user.code_comment_block_prefix()
      key(space)
      insert(user.text)
      key(space)
      user.code_comment_block_suffix()
  open block comment:
      user.code_comment_block_prefix()
  close block comment:
      user.code_comment_block_suffix()
output:
  type: source_file
  children:
  - type: matches
    children:
    - type: match
      children: []
      key:
        text: tag
        type: identifier
      modifier: []
      pattern:
        text: ' user.code_comment_block'
        type: implicit_string
  - type: command_declaration
    children: []
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: block
          type: word
        - text: comment
          type: word
    script:
      type: block
      children:
      - type: expression_statement
        children: []
        expression:
          type: action
          children: []
          action_name:
            text: user.code_comment_block
            type: identifier
          arguments:
            type: argument_list
            children: []
  - type: command_declaration
    children:
    - text: '#todo: this should probably be a single function once'
      type: comment
    - text: '#.talon supports implementing actions with parameters?'
      type: comment
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: block
          type: word
        - text: comment
          type: word
        - text: line
          type: word
    script:
      type: block
      children:
      - type: expression_statement
        children: []
        expression:
          type: action
          children: []
          action_name:
            text: edit.line_start
            type: identifier
          arguments:
            type: argument_list
            children: []
      - type: expression_statement
        children: []
        expression:
          type: action
          children: []
          action_name:
            text: user.code_comment_block_prefix
            type: identifier
          arguments:
            type: argument_list
            children: []
      - type: expression_statement
        children: []
        expression:
          type: key_action
          children: []
          arguments:
            text: space
            type: implicit_string
      - type: expression_statement
        children: []
        expression:
          type: action
          children: []
          action_name:
            text: edit.line_end
            type: identifier
          arguments:
            type: argument_list
            children: []
      - type: expression_statement
        children: []
        expression:
          type: key_action
          children: []
          arguments:
            text: space
            type: implicit_string
      - type: expression_statement
        children: []
        expression:
          type: action
          children: []
          action_name:
            text: user.code_comment_block_suffix
            type: identifier
          arguments:
            type: argument_list
            children: []
  - text: '#adds comment to the start of the line'
    type: comment
  - type: command_declaration
    children:
    - text: '#todo: this should probably be a single function once'
      type: comment
    - text: '#.talon supports implementing actions with parameters?'
      type: comment
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: block
          type: word
        - text: comment
          type: word
        - text: line
          type: word
        - type: capture
          children: []
          capture_name:
            text: user.text
            type: identifier
        - text: over
          type: word
    script:
      type: block
      children:
      - type: expression_statement
        children: []
        expression:
          type: action
          children: []
          action_name:
            text: edit.line_start
            type: identifier
          arguments:
            type: argument_list
            children: []
      - type: expression_statement
        children: []
        expression:
          type: action
          children: []
          action_name:
            text: user.code_comment_block
            type: identifier
          arguments:
            type: argument_list
            children: []
      - type: expression_statement
        children: []
        expression:
          type: action
          children: []
          action_name:
            text: insert
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: variable
              children: []
              variable_name:
                text: user.text
                type: identifier
  - type: command_declaration
    children:
    - text: '#todo: this should probably be a single function once'
      type: comment
    - text: '#.talon supports implementing actions with parameters?'
      type: comment
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: block
          type: word
        - text: comment
          type: word
        - type: capture
          children: []
          capture_name:
            text: user.text
            type: identifier
        - text: over
          type: word
    script:
      type: block
      children:
      - type: expression_statement
        children: []
        expression:
          type: action
          children: []
          action_name:
            text: user.code_comment_block
            type: identifier
          arguments:
            type: argument_list
            children: []
      - type: expression_statement
        children: []
        expression:
          type: action
          children: []
          action_name:
            text: insert
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: variable
              children: []
              variable_name:
                text: user.text
                type: identifier
  - type: command_declaration
    children:
    - text: '#todo: this should probably be a single function once'
      type: comment
    - text: '#.talon supports implementing actions with parameters?'
      type: comment
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: block
          type: word
        - text: comment
          type: word
        - type: capture
          children: []
          capture_name:
            text: user.text
            type: identifier
      - text: $
        type: end_anchor
    script:
      type: block
      children:
      - type: expression_statement
        children: []
        expression:
          type: action
          children: []
          action_name:
            text: user.code_comment_block
            type: identifier
          arguments:
            type: argument_list
            children: []
      - type: expression_statement
        children: []
        expression:
          type: action
          children: []
          action_name:
            text: insert
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: variable
              children: []
              variable_name:
                text: user.text
                type: identifier
  - type: command_declaration
    children:
    - text: '#todo: this should probably be a single function once'
      type: comment
    - text: '#.talon supports implementing actions with parameters?'
      type: comment
    rule:
      type: rule
      children:
      - type: seq
        children:
        - type: parenthesized_rule
          children:
          - type: choice
            children:
            - text: line
              type: word
            - text: inline
              type: word
        - text: block
          type: word
        - text: comment
          type: word
        - type: capture
          children: []
          capture_name:
            text: user.text
            type: identifier
        - text: over
          type: word
    script:
      type: block
      children:
      - type: expression_statement
        children: []
        expression:
          type: action
          children: []
          action_name:
            text: edit.line_end
            type: identifier
          arguments:
            type: argument_list
            children: []
      - type: expression_statement
        children: []
        expression:
          type: action
          children: []
          action_name:
            text: user.code_comment_block_prefix
            type: identifier
          arguments:
            type: argument_list
            children: []
      - type: expression_statement
        children: []
        expression:
          type: key_action
          children: []
          arguments:
            text: space
            type: implicit_string
      - type: expression_statement
        children: []
        expression:
          type: action
          children: []
          action_name:
            text: insert
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: variable
              children: []
              variable_name:
                text: user.text
                type: identifier
      - type: expression_statement
        children: []
        expression:
          type: key_action
          children: []
          arguments:
            text: space
            type: implicit_string
      - type: expression_statement
        children: []
        expression:
          type: action
          children: []
          action_name:
            text: user.code_comment_block_suffix
            type: identifier
          arguments:
            type: argument_list
            children: []
  - type: command_declaration
    children:
    - text: '#todo: this should probably be a single function once'
      type: comment
    - text: '#.talon supports implementing actions with parameters?'
      type: comment
    rule:
      type: rule
      children:
      - type: seq
        children:
        - type: parenthesized_rule
          children:
          - type: choice
            children:
            - text: line
              type: word
            - text: inline
              type: word
        - text: block
          type: word
        - text: comment
          type: word
        - type: capture
          children: []
          capture_name:
            text: user.text
            type: identifier
      - text: $
        type: end_anchor
    script:
      type: block
      children:
      - type: expression_statement
        children: []
        expression:
          type: action
          children: []
          action_name:
            text: edit.line_end
            type: identifier
          arguments:
            type: argument_list
            children: []
      - type: expression_statement
        children: []
        expression:
          type: action
          children: []
          action_name:
            text: user.code_comment_block_prefix
            type: identifier
          arguments:
            type: argument_list
            children: []
      - type: expression_statement
        children: []
        expression:
          type: key_action
          children: []
          arguments:
            text: space
            type: implicit_string
      - type: expression_statement
        children: []
        expression:
          type: action
          children: []
          action_name:
            text: insert
            type: identifier
          arguments:
            type: argument_list
            children:
            - type: variable
              children: []
              variable_name:
                text: user.text
                type: identifier
      - type: expression_statement
        children: []
        expression:
          type: key_action
          children: []
          arguments:
            text: space
            type: implicit_string
      - type: expression_statement
        children: []
        expression:
          type: action
          children: []
          action_name:
            text: user.code_comment_block_suffix
            type: identifier
          arguments:
            type: argument_list
            children: []
  - type: command_declaration
    children: []
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: open
          type: word
        - text: block
          type: word
        - text: comment
          type: word
    script:
      type: block
      children:
      - type: expression_statement
        children: []
        expression:
          type: action
          children: []
          action_name:
            text: user.code_comment_block_prefix
            type: identifier
          arguments:
            type: argument_list
            children: []
  - type: command_declaration
    children: []
    rule:
      type: rule
      children:
      - type: seq
        children:
        - text: close
          type: word
        - text: block
          type: word
        - text: comment
          type: word
    script:
      type: block
      children:
      - type: expression_statement
        children: []
        expression:
          type: action
          children: []
          action_name:
            text: user.code_comment_block_suffix
            type: identifier
          arguments:
            type: argument_list
            children: []
