input: |
  tag: user.code_operators_bitwise
  -

  #bitwise operators
  [op] bitwise and: user.code_operator_bitwise_and()
  [op] bitwise or: user.code_operator_bitwise_or()

  # TODO: split these out into separate logical and bitwise operator commands

  (op | logical | bitwise) (ex | exclusive) or: user.code_operator_bitwise_exclusive_or()
  (op | logical | bitwise) (left shift | shift left): user.code_operator_bitwise_left_shift()
  (op | logical | bitwise) (right shift | shift right): user.code_operator_bitwise_right_shift()
output:
  type: source_file
  children:
  - type: matches
    children:
    - type: match
      children: []
      left:
        text: tag
        type: identifier
      modifiers: []
      right:
        text: ' user.code_operators_bitwise'
        type: implicit_string
  - text: '#bitwise operators'
    type: comment
  - type: declarations
    children:
    - type: command_declaration
      children:
      left:
        type: rule
        children:
        - type: seq
          children:
          - type: optional
            children:
            - text: op
              type: word
          - text: bitwise
            type: word
          - text: and
            type: word
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: action
            children: []
            action_name:
              text: user.code_operator_bitwise_and
              type: identifier
            arguments:
              type: argument_list
              children: []
    - type: command_declaration
      children:
      left:
        type: rule
        children:
        - type: seq
          children:
          - type: optional
            children:
            - text: op
              type: word
          - text: bitwise
            type: word
          - text: or
            type: word
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: action
            children: []
            action_name:
              text: user.code_operator_bitwise_or
              type: identifier
            arguments:
              type: argument_list
              children: []
    - text: '# TODO: split these out into separate logical and bitwise operator commands'
      type: comment
    - type: command_declaration
      children:
      left:
        type: rule
        children:
        - type: seq
          children:
          - type: parenthesized_rule
            children:
            - type: choice
              children:
              - text: op
                type: word
              - text: logical
                type: word
              - text: bitwise
                type: word
          - type: parenthesized_rule
            children:
            - type: choice
              children:
              - text: ex
                type: word
              - text: exclusive
                type: word
          - text: or
            type: word
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: action
            children: []
            action_name:
              text: user.code_operator_bitwise_exclusive_or
              type: identifier
            arguments:
              type: argument_list
              children: []
    - type: command_declaration
      children:
      left:
        type: rule
        children:
        - type: seq
          children:
          - type: parenthesized_rule
            children:
            - type: choice
              children:
              - text: op
                type: word
              - text: logical
                type: word
              - text: bitwise
                type: word
          - type: parenthesized_rule
            children:
            - type: choice
              children:
              - type: seq
                children:
                - text: left
                  type: word
                - text: shift
                  type: word
              - type: seq
                children:
                - text: shift
                  type: word
                - text: left
                  type: word
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: action
            children: []
            action_name:
              text: user.code_operator_bitwise_left_shift
              type: identifier
            arguments:
              type: argument_list
              children: []
    - type: command_declaration
      children:
      left:
        type: rule
        children:
        - type: seq
          children:
          - type: parenthesized_rule
            children:
            - type: choice
              children:
              - text: op
                type: word
              - text: logical
                type: word
              - text: bitwise
                type: word
          - type: parenthesized_rule
            children:
            - type: choice
              children:
              - type: seq
                children:
                - text: right
                  type: word
                - text: shift
                  type: word
              - type: seq
                children:
                - text: shift
                  type: word
                - text: right
                  type: word
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: action
            children: []
            action_name:
              text: user.code_operator_bitwise_right_shift
              type: identifier
            arguments:
              type: argument_list
              children: []
