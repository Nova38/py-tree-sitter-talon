input: |
  tag: user.scala
  -
  tag(): user.code_imperative
  tag(): user.code_object_oriented

  tag(): user.code_comment_line
  tag(): user.code_comment_block_c_like
  tag(): user.code_data_bool
  tag(): user.code_data_null
  tag(): user.code_functions
  tag(): user.code_libraries
  tag(): user.code_operators_array
  tag(): user.code_operators_assignment
  tag(): user.code_operators_bitwise
  tag(): user.code_operators_lambda
  tag(): user.code_operators_math


  settings():
      user.code_private_function_formatter = "PRIVATE_CAMEL_CASE"
      user.code_protected_function_formatter = "PRIVATE_CAMEL_CASE"
      user.code_public_function_formatter = "PRIVATE_CAMEL_CASE"
      user.code_private_variable_formatter = "PRIVATE_CAMEL_CASE"
      user.code_protected_variable_formatter = "PRIVATE_CAMEL_CASE"
      user.code_public_variable_formatter = "PRIVATE_CAMEL_CASE"

  state {user.scala_modifier}:
      insert("{user.scala_modifier} ")

  state {user.scala_keyword}:
      insert("{scala_keyword} ")

  op right arrow: " -> "
  op left arrow: " <- "
  op plus plus: " ++ "
  op subtype: " <: "

  state match: user.code_state_switch()

  block string:
    insert('""""""')
    key("left left left")
output:
  type: source_file
  children:
  - type: matches
    children:
    - type: match
      children: []
      left:
        text: tag
        type: identifier
      modifiers: []
      right:
        text: ' user.scala'
        type: implicit_string
  - type: declarations
    children:
    - type: tag_import_declaration
      children: []
      right:
        text: user.code_imperative
        type: identifier
    - type: tag_import_declaration
      children: []
      right:
        text: user.code_object_oriented
        type: identifier
    - type: tag_import_declaration
      children: []
      right:
        text: user.code_comment_line
        type: identifier
    - type: tag_import_declaration
      children: []
      right:
        text: user.code_comment_block_c_like
        type: identifier
    - type: tag_import_declaration
      children: []
      right:
        text: user.code_data_bool
        type: identifier
    - type: tag_import_declaration
      children: []
      right:
        text: user.code_data_null
        type: identifier
    - type: tag_import_declaration
      children: []
      right:
        text: user.code_functions
        type: identifier
    - type: tag_import_declaration
      children: []
      right:
        text: user.code_libraries
        type: identifier
    - type: tag_import_declaration
      children: []
      right:
        text: user.code_operators_array
        type: identifier
    - type: tag_import_declaration
      children: []
      right:
        text: user.code_operators_assignment
        type: identifier
    - type: tag_import_declaration
      children: []
      right:
        text: user.code_operators_bitwise
        type: identifier
    - type: tag_import_declaration
      children: []
      right:
        text: user.code_operators_lambda
        type: identifier
    - type: tag_import_declaration
      children: []
      right:
        text: user.code_operators_math
        type: identifier
    - type: settings_declaration
      children: []
      right:
        type: block
        children:
        - type: assignment_statement
          children: []
          left:
            text: user.code_private_function_formatter
            type: identifier
          right:
            type: string
            children:
            - text: PRIVATE_CAMEL_CASE
              type: string_content
        - type: assignment_statement
          children: []
          left:
            text: user.code_protected_function_formatter
            type: identifier
          right:
            type: string
            children:
            - text: PRIVATE_CAMEL_CASE
              type: string_content
        - type: assignment_statement
          children: []
          left:
            text: user.code_public_function_formatter
            type: identifier
          right:
            type: string
            children:
            - text: PRIVATE_CAMEL_CASE
              type: string_content
        - type: assignment_statement
          children: []
          left:
            text: user.code_private_variable_formatter
            type: identifier
          right:
            type: string
            children:
            - text: PRIVATE_CAMEL_CASE
              type: string_content
        - type: assignment_statement
          children: []
          left:
            text: user.code_protected_variable_formatter
            type: identifier
          right:
            type: string
            children:
            - text: PRIVATE_CAMEL_CASE
              type: string_content
        - type: assignment_statement
          children: []
          left:
            text: user.code_public_variable_formatter
            type: identifier
          right:
            type: string
            children:
            - text: PRIVATE_CAMEL_CASE
              type: string_content
    - type: command_declaration
      children: []
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: state
            type: word
          - type: list
            children: []
            list_name:
              text: user.scala_modifier
              type: identifier
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: action
            children: []
            action_name:
              text: insert
              type: identifier
            arguments:
              type: argument_list
              children:
              - type: string
                children:
                - text: '{'
                  type: string_content
                - text: user.scala_modifier
                  type: string_content
                - text: '}'
                  type: string_content
                - text: ' '
                  type: string_content
    - type: command_declaration
      children: []
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: state
            type: word
          - type: list
            children: []
            list_name:
              text: user.scala_keyword
              type: identifier
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: action
            children: []
            action_name:
              text: insert
              type: identifier
            arguments:
              type: argument_list
              children:
              - type: string
                children:
                - text: '{'
                  type: string_content
                - text: scala_keyword
                  type: string_content
                - text: '}'
                  type: string_content
                - text: ' '
                  type: string_content
    - type: command_declaration
      children: []
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: op
            type: word
          - text: right
            type: word
          - text: arrow
            type: word
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: string
            children:
            - text: ' -> '
              type: string_content
    - type: command_declaration
      children: []
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: op
            type: word
          - text: left
            type: word
          - text: arrow
            type: word
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: string
            children:
            - text: ' <- '
              type: string_content
    - type: command_declaration
      children: []
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: op
            type: word
          - text: plus
            type: word
          - text: plus
            type: word
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: string
            children:
            - text: ' ++ '
              type: string_content
    - type: command_declaration
      children: []
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: op
            type: word
          - text: subtype
            type: word
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: string
            children:
            - text: ' <: '
              type: string_content
    - type: command_declaration
      children: []
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: state
            type: word
          - text: match
            type: word
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: action
            children: []
            action_name:
              text: user.code_state_switch
              type: identifier
            arguments:
              type: argument_list
              children: []
    - type: command_declaration
      children: []
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: block
            type: word
          - text: string
            type: word
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: action
            children: []
            action_name:
              text: insert
              type: identifier
            arguments:
              type: argument_list
              children:
              - type: string
                children:
                - text: '""""""'
                  type: string_content
        - type: expression_statement
          children: []
          expression:
            type: key_action
            children: []
            arguments:
              text: '"left left left"'
              type: implicit_string
