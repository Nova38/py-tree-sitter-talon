input: |
  tag: user.php
  -
  tag(): user.code_imperative
  tag(): user.code_object_oriented
  tag(): user.code_libraries

  tag(): user.code_comment_line
  tag(): user.code_comment_block
  tag(): user.code_comment_documentation
  tag(): user.code_data_bool
  tag(): user.code_data_null
  tag(): user.code_operators_assignment
  tag(): user.code_operators_math
  tag(): user.code_functions

  settings():
      user.code_private_function_formatter = "PRIVATE_CAMEL_CASE"
      user.code_protected_function_formatter = "PRIVATE_CAMEL_CASE"
      user.code_public_function_formatter = "PRIVATE_CAMEL_CASE"
      user.code_private_variable_formatter = "PRIVATE_CAMEL_CASE"
      user.code_protected_variable_formatter = "PRIVATE_CAMEL_CASE"
      user.code_public_variable_formatter = "PRIVATE_CAMEL_CASE"

  (op | is) loosely equal: " == "
  (op | is) loosely not equal: " != "

  state try: "try {\n"
  state catch: "catch (\\Throwable $exception) {\n"

  var <phrase> [over]:
      insert("$")
      insert(user.formatted_text(phrase, "PRIVATE_CAMEL_CASE"))
output:
  type: source_file
  children:
    - type: context
      children:
        - type: match
          children: []
          key:
            text: tag
            type: identifier
          pattern:
            text: " user.php"
            type: implicit_string
    - type: include_tag
      children: []
      tag:
        text: user.code_imperative
        type: identifier
    - type: include_tag
      children: []
      tag:
        text: user.code_object_oriented
        type: identifier
    - type: include_tag
      children: []
      tag:
        text: user.code_libraries
        type: identifier
    - type: include_tag
      children: []
      tag:
        text: user.code_comment_line
        type: identifier
    - type: include_tag
      children: []
      tag:
        text: user.code_comment_block
        type: identifier
    - type: include_tag
      children: []
      tag:
        text: user.code_comment_documentation
        type: identifier
    - type: include_tag
      children: []
      tag:
        text: user.code_data_bool
        type: identifier
    - type: include_tag
      children: []
      tag:
        text: user.code_data_null
        type: identifier
    - type: include_tag
      children: []
      tag:
        text: user.code_operators_assignment
        type: identifier
    - type: include_tag
      children: []
      tag:
        text: user.code_operators_math
        type: identifier
    - type: include_tag
      children: []
      tag:
        text: user.code_functions
        type: identifier
    - type: settings
      children:
        - type: block
          children:
            - type: assignment
              children: []
              left:
                text: user.code_private_function_formatter
                type: identifier
              right:
                type: string
                children:
                  - text: PRIVATE_CAMEL_CASE
                    type: string_content
            - type: assignment
              children: []
              left:
                text: user.code_protected_function_formatter
                type: identifier
              right:
                type: string
                children:
                  - text: PRIVATE_CAMEL_CASE
                    type: string_content
            - type: assignment
              children: []
              left:
                text: user.code_public_function_formatter
                type: identifier
              right:
                type: string
                children:
                  - text: PRIVATE_CAMEL_CASE
                    type: string_content
            - type: assignment
              children: []
              left:
                text: user.code_private_variable_formatter
                type: identifier
              right:
                type: string
                children:
                  - text: PRIVATE_CAMEL_CASE
                    type: string_content
            - type: assignment
              children: []
              left:
                text: user.code_protected_variable_formatter
                type: identifier
              right:
                type: string
                children:
                  - text: PRIVATE_CAMEL_CASE
                    type: string_content
            - type: assignment
              children: []
              left:
                text: user.code_public_variable_formatter
                type: identifier
              right:
                type: string
                children:
                  - text: PRIVATE_CAMEL_CASE
                    type: string_content
    - type: command
      children: []
      rule:
        type: rule
        children:
          - type: seq
            children:
              - type: parenthesized_rule
                children:
                  - type: choice
                    children:
                      - text: op
                        type: word
                      - text: is
                        type: word
              - text: loosely
                type: word
              - text: equal
                type: word
      script:
        type: block
        children:
          - type: expression
            children: []
            expression:
              type: string
              children:
                - text: " == "
                  type: string_content
    - type: command
      children: []
      rule:
        type: rule
        children:
          - type: seq
            children:
              - type: parenthesized_rule
                children:
                  - type: choice
                    children:
                      - text: op
                        type: word
                      - text: is
                        type: word
              - text: loosely
                type: word
              - text: not
                type: word
              - text: equal
                type: word
      script:
        type: block
        children:
          - type: expression
            children: []
            expression:
              type: string
              children:
                - text: " != "
                  type: string_content
    - type: command
      children: []
      rule:
        type: rule
        children:
          - type: seq
            children:
              - text: state
                type: word
              - text: try
                type: word
      script:
        type: block
        children:
          - type: expression
            children: []
            expression:
              type: string
              children:
                - text: "try "
                  type: string_content
                - text: "{"
                  type: string_content
                - text: \n
                  type: string_escape_sequence
    - type: command
      children: []
      rule:
        type: rule
        children:
          - type: seq
            children:
              - text: state
                type: word
              - text: catch
                type: word
      script:
        type: block
        children:
          - type: expression
            children: []
            expression:
              type: string
              children:
                - text: catch (
                  type: string_content
                - text: \\
                  type: string_escape_sequence
                - text: "Throwable $exception) "
                  type: string_content
                - text: "{"
                  type: string_content
                - text: \n
                  type: string_escape_sequence
    - type: command
      children: []
      rule:
        type: rule
        children:
          - type: seq
            children:
              - text: var
                type: word
              - type: capture
                children: []
                capture_name:
                  text: phrase
                  type: identifier
              - type: optional
                children:
                  - text: over
                    type: word
      script:
        type: block
        children:
          - type: expression
            children: []
            expression:
              type: action
              children: []
              action_name:
                text: insert
                type: identifier
              arguments:
                type: argument_list
                children:
                  - type: string
                    children:
                      - text: $
                        type: string_content
          - type: expression
            children: []
            expression:
              type: action
              children: []
              action_name:
                text: insert
                type: identifier
              arguments:
                type: argument_list
                children:
                  - type: action
                    children: []
                    action_name:
                      text: user.formatted_text
                      type: identifier
                    arguments:
                      type: argument_list
                      children:
                        - type: variable
                          children: []
                          variable_name:
                            text: phrase
                            type: identifier
                        - type: string
                          children:
                            - text: PRIVATE_CAMEL_CASE
                              type: string_content
