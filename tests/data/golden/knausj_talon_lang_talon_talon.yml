input: |
  tag: user.talon
  -
  tag(): user.code_operators_math
  tag(): user.code_operators_assignment
  tag(): user.code_comment_line
  tag(): user.code_functions_common
  # uncomment user.talon_populate_lists tag to activate talon-specific lists of actions, scopes, modes etcetera.
  # Do not enable this tag with dragon, as it will be unusable.
  # with conformer, the latency increase may also be unacceptable depending on your cpu
  # see https://github.com/knausj85/knausj_talon/issues/600
  # tag(): user.talon_populate_lists

  dot talon: insert(".talon")
  #defintion blocks for the context
  action block:
      user.insert_between("action(", "):")
  setting block:
      insert("settings():\n\t")
  setting {user.talon_settings}:
      user.paste("{talon_settings} = ")
  #context requirements
  win require:
      insert("os: windows\n")
  mac require:
      insert("os: mac\n")
  linux require:
      insert("os: linux\n")
  title require:
      insert("win.title: ")
  application [require] [{user.talon_apps}]:
      app = talon_apps or ""
      user.paste("app: {app}")
  mode require [{user.talon_modes}]:
      mode = talon_modes or ""
      user.paste("mode: {mode}")
  tag require [{user.talon_tags}]:
      tag = talon_tags or ""
      user.paste("tag: {tag}")
  tag set [{user.talon_tags}]:
      tag = talon_tags or ""
      user.paste("tag(): {tag}")
  # requires user.talon_populate_lists tag. do not use with dragon
  list {user.talon_lists}: "{{{talon_lists}}}"
  # requires user.talon_populate_lists tag. do not use with dragon
  capture {user.talon_captures}: "<{talon_captures}>"

  #commands for dictating key combos
  key <user.keys> over: "{keys}"
  key <user.modifiers> over: "{modifiers}"

  # all actions (requires uncommenting user.talon_populate_lists tag above)
  funk {user.talon_actions}: user.code_insert_function(talon_actions, edit.selected_text())
  funk cell <number>:
      user.code_select_function(number - 1, "")
  funk wrap <user.code_common_function>:
      user.code_insert_function(code_common_function, edit.selected_text())
  funk wrap <number>:
      user.code_select_function(number - 1, edit.selected_text())
output:
  type: source_file
  children:
  - type: matches
    children:
    - type: match
      children: []
      left:
        text: tag
        type: identifier
      modifiers: []
      right:
        text: ' user.talon'
        type: implicit_string
  - type: declarations
    children:
    - type: tag_import_declaration
      children: []
      right:
        text: user.code_operators_math
        type: identifier
    - type: tag_import_declaration
      children: []
      right:
        text: user.code_operators_assignment
        type: identifier
    - type: tag_import_declaration
      children: []
      right:
        text: user.code_comment_line
        type: identifier
    - type: tag_import_declaration
      children: []
      right:
        text: user.code_functions_common
        type: identifier
    - text: '# uncomment user.talon_populate_lists tag to activate talon-specific
        lists of actions, scopes, modes etcetera.'
      type: comment
    - text: '# Do not enable this tag with dragon, as it will be unusable.'
      type: comment
    - text: '# with conformer, the latency increase may also be unacceptable depending
        on your cpu'
      type: comment
    - text: '# see https://github.com/knausj85/knausj_talon/issues/600'
      type: comment
    - text: '# tag(): user.talon_populate_lists'
      type: comment
    - type: command_declaration
      children:
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: dot
            type: word
          - text: talon
            type: word
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: action
            children: []
            action_name:
              text: insert
              type: identifier
            arguments:
              type: argument_list
              children:
              - type: string
                children:
                - text: .talon
                  type: string_content
    - text: '#defintion blocks for the context'
      type: comment
    - type: command_declaration
      children:
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: action
            type: word
          - text: block
            type: word
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: action
            children: []
            action_name:
              text: user.insert_between
              type: identifier
            arguments:
              type: argument_list
              children:
              - type: string
                children:
                - text: action(
                  type: string_content
              - type: string
                children:
                - text: '):'
                  type: string_content
    - type: command_declaration
      children:
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: setting
            type: word
          - text: block
            type: word
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: action
            children: []
            action_name:
              text: insert
              type: identifier
            arguments:
              type: argument_list
              children:
              - type: string
                children:
                - text: 'settings():'
                  type: string_content
                - text: \n
                  type: string_escape_sequence
                - text: \t
                  type: string_escape_sequence
    - type: command_declaration
      children:
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: setting
            type: word
          - type: list
            children: []
            list_name:
              text: user.talon_settings
              type: identifier
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: action
            children: []
            action_name:
              text: user.paste
              type: identifier
            arguments:
              type: argument_list
              children:
              - type: string
                children:
                - text: '{'
                  type: string_content
                - text: talon_settings
                  type: string_content
                - text: '}'
                  type: string_content
                - text: ' = '
                  type: string_content
    - text: '#context requirements'
      type: comment
    - type: command_declaration
      children:
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: win
            type: word
          - text: require
            type: word
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: action
            children: []
            action_name:
              text: insert
              type: identifier
            arguments:
              type: argument_list
              children:
              - type: string
                children:
                - text: 'os: windows'
                  type: string_content
                - text: \n
                  type: string_escape_sequence
    - type: command_declaration
      children:
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: mac
            type: word
          - text: require
            type: word
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: action
            children: []
            action_name:
              text: insert
              type: identifier
            arguments:
              type: argument_list
              children:
              - type: string
                children:
                - text: 'os: mac'
                  type: string_content
                - text: \n
                  type: string_escape_sequence
    - type: command_declaration
      children:
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: linux
            type: word
          - text: require
            type: word
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: action
            children: []
            action_name:
              text: insert
              type: identifier
            arguments:
              type: argument_list
              children:
              - type: string
                children:
                - text: 'os: linux'
                  type: string_content
                - text: \n
                  type: string_escape_sequence
    - type: command_declaration
      children:
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: title
            type: word
          - text: require
            type: word
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: action
            children: []
            action_name:
              text: insert
              type: identifier
            arguments:
              type: argument_list
              children:
              - type: string
                children:
                - text: 'win.title: '
                  type: string_content
    - type: command_declaration
      children:
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: application
            type: word
          - type: optional
            children:
            - text: require
              type: word
          - type: optional
            children:
            - type: list
              children: []
              list_name:
                text: user.talon_apps
                type: identifier
      right:
        type: block
        children:
        - type: assignment_statement
          children: []
          left:
            text: app
            type: identifier
          right:
            type: binary_operator
            children: []
            left:
              type: variable
              children: []
              variable_name:
                text: talon_apps
                type: identifier
            operator:
              text: or
              type: operator
            right:
              type: string
              children: []
        - type: expression_statement
          children: []
          expression:
            type: action
            children: []
            action_name:
              text: user.paste
              type: identifier
            arguments:
              type: argument_list
              children:
              - type: string
                children:
                - text: 'app: '
                  type: string_content
                - text: '{'
                  type: string_content
                - text: app
                  type: string_content
                - text: '}'
                  type: string_content
    - type: command_declaration
      children:
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: mode
            type: word
          - text: require
            type: word
          - type: optional
            children:
            - type: list
              children: []
              list_name:
                text: user.talon_modes
                type: identifier
      right:
        type: block
        children:
        - type: assignment_statement
          children: []
          left:
            text: mode
            type: identifier
          right:
            type: binary_operator
            children: []
            left:
              type: variable
              children: []
              variable_name:
                text: talon_modes
                type: identifier
            operator:
              text: or
              type: operator
            right:
              type: string
              children: []
        - type: expression_statement
          children: []
          expression:
            type: action
            children: []
            action_name:
              text: user.paste
              type: identifier
            arguments:
              type: argument_list
              children:
              - type: string
                children:
                - text: 'mode: '
                  type: string_content
                - text: '{'
                  type: string_content
                - text: mode
                  type: string_content
                - text: '}'
                  type: string_content
    - type: command_declaration
      children:
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: tag
            type: word
          - text: require
            type: word
          - type: optional
            children:
            - type: list
              children: []
              list_name:
                text: user.talon_tags
                type: identifier
      right:
        type: block
        children:
        - type: assignment_statement
          children: []
          left:
            text: tag
            type: identifier
          right:
            type: binary_operator
            children: []
            left:
              type: variable
              children: []
              variable_name:
                text: talon_tags
                type: identifier
            operator:
              text: or
              type: operator
            right:
              type: string
              children: []
        - type: expression_statement
          children: []
          expression:
            type: action
            children: []
            action_name:
              text: user.paste
              type: identifier
            arguments:
              type: argument_list
              children:
              - type: string
                children:
                - text: 'tag: '
                  type: string_content
                - text: '{'
                  type: string_content
                - text: tag
                  type: string_content
                - text: '}'
                  type: string_content
    - type: command_declaration
      children:
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: tag
            type: word
          - text: set
            type: word
          - type: optional
            children:
            - type: list
              children: []
              list_name:
                text: user.talon_tags
                type: identifier
      right:
        type: block
        children:
        - type: assignment_statement
          children: []
          left:
            text: tag
            type: identifier
          right:
            type: binary_operator
            children: []
            left:
              type: variable
              children: []
              variable_name:
                text: talon_tags
                type: identifier
            operator:
              text: or
              type: operator
            right:
              type: string
              children: []
        - type: expression_statement
          children: []
          expression:
            type: action
            children: []
            action_name:
              text: user.paste
              type: identifier
            arguments:
              type: argument_list
              children:
              - type: string
                children:
                - text: 'tag(): '
                  type: string_content
                - text: '{'
                  type: string_content
                - text: tag
                  type: string_content
                - text: '}'
                  type: string_content
    - text: '# requires user.talon_populate_lists tag. do not use with dragon'
      type: comment
    - type: command_declaration
      children:
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: list
            type: word
          - type: list
            children: []
            list_name:
              text: user.talon_lists
              type: identifier
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: string
            children:
            - text: '{{'
              type: string_content
            - text: '{'
              type: string_content
            - text: talon_lists
              type: string_content
            - text: '}}'
              type: string_content
            - text: '}'
              type: string_content
    - text: '# requires user.talon_populate_lists tag. do not use with dragon'
      type: comment
    - type: command_declaration
      children:
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: capture
            type: word
          - type: list
            children: []
            list_name:
              text: user.talon_captures
              type: identifier
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: string
            children:
            - text: <
              type: string_content
            - text: '{'
              type: string_content
            - text: talon_captures
              type: string_content
            - text: '}'
              type: string_content
            - text: '>'
              type: string_content
    - text: '#commands for dictating key combos'
      type: comment
    - type: command_declaration
      children:
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: key
            type: word
          - type: capture
            children: []
            capture_name:
              text: user.keys
              type: identifier
          - text: over
            type: word
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: string
            children:
            - text: '{'
              type: string_content
            - text: keys
              type: string_content
            - text: '}'
              type: string_content
    - type: command_declaration
      children:
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: key
            type: word
          - type: capture
            children: []
            capture_name:
              text: user.modifiers
              type: identifier
          - text: over
            type: word
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: string
            children:
            - text: '{'
              type: string_content
            - text: modifiers
              type: string_content
            - text: '}'
              type: string_content
    - text: '# all actions (requires uncommenting user.talon_populate_lists tag above)'
      type: comment
    - type: command_declaration
      children:
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: funk
            type: word
          - type: list
            children: []
            list_name:
              text: user.talon_actions
              type: identifier
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: action
            children: []
            action_name:
              text: user.code_insert_function
              type: identifier
            arguments:
              type: argument_list
              children:
              - type: variable
                children: []
                variable_name:
                  text: talon_actions
                  type: identifier
              - type: action
                children: []
                action_name:
                  text: edit.selected_text
                  type: identifier
                arguments:
                  type: argument_list
                  children: []
    - type: command_declaration
      children:
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: funk
            type: word
          - text: cell
            type: word
          - type: capture
            children: []
            capture_name:
              text: number
              type: identifier
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: action
            children: []
            action_name:
              text: user.code_select_function
              type: identifier
            arguments:
              type: argument_list
              children:
              - type: binary_operator
                children: []
                left:
                  type: variable
                  children: []
                  variable_name:
                    text: number
                    type: identifier
                operator:
                  text: '-'
                  type: operator
                right:
                  text: '1'
                  type: integer
              - type: string
                children: []
    - type: command_declaration
      children:
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: funk
            type: word
          - text: wrap
            type: word
          - type: capture
            children: []
            capture_name:
              text: user.code_common_function
              type: identifier
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: action
            children: []
            action_name:
              text: user.code_insert_function
              type: identifier
            arguments:
              type: argument_list
              children:
              - type: variable
                children: []
                variable_name:
                  text: code_common_function
                  type: identifier
              - type: action
                children: []
                action_name:
                  text: edit.selected_text
                  type: identifier
                arguments:
                  type: argument_list
                  children: []
    - type: command_declaration
      children:
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: funk
            type: word
          - text: wrap
            type: word
          - type: capture
            children: []
            capture_name:
              text: number
              type: identifier
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: action
            children: []
            action_name:
              text: user.code_select_function
              type: identifier
            arguments:
              type: argument_list
              children:
              - type: binary_operator
                children: []
                left:
                  type: variable
                  children: []
                  variable_name:
                    text: number
                    type: identifier
                operator:
                  text: '-'
                  type: operator
                right:
                  text: '1'
                  type: integer
              - type: action
                children: []
                action_name:
                  text: edit.selected_text
                  type: identifier
                arguments:
                  type: argument_list
                  children: []
