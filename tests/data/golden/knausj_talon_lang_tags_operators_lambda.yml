input: |
  tag: user.code_operators_lambda
  -

  # In many languages, anonymous functions aren't merely infix syntax:
  #
  #       Haskell  '\x -> bla'
  #       OCaml    'fun x -> bla'
  #       Rust     '|x| { bla }'
  #
  # Therefore a revision of this command may be in order.

  # syntax for anonymous functions
  op lambda: user.code_operator_lambda()
output:
  type: source_file
  children:
  - type: matches
    children:
    - type: match
      children: []
      left:
        text: tag
        type: identifier
      modifiers: []
      right:
        text: ' user.code_operators_lambda'
        type: implicit_string
  - text: "# In many languages, anonymous functions aren't merely infix syntax:"
    type: comment
  - text: '#'
    type: comment
  - text: "#       Haskell  '\\x -> bla'"
    type: comment
  - text: "#       OCaml    'fun x -> bla'"
    type: comment
  - text: "#       Rust     '|x| { bla }'"
    type: comment
  - text: '#'
    type: comment
  - text: '# Therefore a revision of this command may be in order.'
    type: comment
  - text: '# syntax for anonymous functions'
    type: comment
  - type: declarations
    children:
    - type: command_declaration
      children:
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: op
            type: word
          - text: lambda
            type: word
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: action
            children: []
            action_name:
              text: user.code_operator_lambda
              type: identifier
            arguments:
              type: argument_list
              children: []
