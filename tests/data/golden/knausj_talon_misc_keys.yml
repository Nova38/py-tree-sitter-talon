input: |
  go <user.arrow_keys>: user.move_cursor(arrow_keys)
  <user.letter>: key(letter)
  (ship | uppercase) <user.letters> [(lowercase | sunk)]:
      user.insert_formatted(letters, "ALL_CAPS")
  <user.symbol_key>: key(symbol_key)
  <user.function_key>: key(function_key)
  <user.special_key>: key(special_key)
  <user.modifiers> <user.unmodified_key>: key("{modifiers}-{unmodified_key}")
  # for key combos consisting only of modifiers, eg. `press super`.
  press <user.modifiers>: key(modifiers)
  # for consistency with dictation mode and explicit arrow keys if you need them.
  press <user.keys>: key(keys)
commands:
- ship <user.letters> sunk
- press <user.keys>
output:
  type: source_file
  children:
  - type: matches
    children: []
  - type: declarations
    children:
    - type: command_declaration
      children: []
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: go
            type: word
          - type: capture
            children: []
            capture_name:
              text: user.arrow_keys
              type: identifier
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: action
            children: []
            action_name:
              text: user.move_cursor
              type: identifier
            arguments:
              type: argument_list
              children:
              - type: variable
                children: []
                variable_name:
                  text: arrow_keys
                  type: identifier
    - type: command_declaration
      children: []
      left:
        type: rule
        children:
        - type: capture
          children: []
          capture_name:
            text: user.letter
            type: identifier
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: key_action
            children: []
            arguments:
              text: letter
              type: implicit_string
    - type: command_declaration
      children: []
      left:
        type: rule
        children:
        - type: seq
          children:
          - type: parenthesized_rule
            children:
            - type: choice
              children:
              - text: ship
                type: word
              - text: uppercase
                type: word
          - type: capture
            children: []
            capture_name:
              text: user.letters
              type: identifier
          - type: optional
            children:
            - type: parenthesized_rule
              children:
              - type: choice
                children:
                - text: lowercase
                  type: word
                - text: sunk
                  type: word
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: action
            children: []
            action_name:
              text: user.insert_formatted
              type: identifier
            arguments:
              type: argument_list
              children:
              - type: variable
                children: []
                variable_name:
                  text: letters
                  type: identifier
              - type: string
                children:
                - text: ALL_CAPS
                  type: string_content
    - type: command_declaration
      children: []
      left:
        type: rule
        children:
        - type: capture
          children: []
          capture_name:
            text: user.symbol_key
            type: identifier
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: key_action
            children: []
            arguments:
              text: symbol_key
              type: implicit_string
    - type: command_declaration
      children: []
      left:
        type: rule
        children:
        - type: capture
          children: []
          capture_name:
            text: user.function_key
            type: identifier
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: key_action
            children: []
            arguments:
              text: function_key
              type: implicit_string
    - type: command_declaration
      children: []
      left:
        type: rule
        children:
        - type: capture
          children: []
          capture_name:
            text: user.special_key
            type: identifier
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: key_action
            children: []
            arguments:
              text: special_key
              type: implicit_string
    - type: command_declaration
      children: []
      left:
        type: rule
        children:
        - type: seq
          children:
          - type: capture
            children: []
            capture_name:
              text: user.modifiers
              type: identifier
          - type: capture
            children: []
            capture_name:
              text: user.unmodified_key
              type: identifier
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: key_action
            children: []
            arguments:
              text: '"{modifiers}-{unmodified_key}"'
              type: implicit_string
    - text: '# for key combos consisting only of modifiers, eg. `press super`.'
      type: comment
    - type: command_declaration
      children: []
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: press
            type: word
          - type: capture
            children: []
            capture_name:
              text: user.modifiers
              type: identifier
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: key_action
            children: []
            arguments:
              text: modifiers
              type: implicit_string
    - text: '# for consistency with dictation mode and explicit arrow keys if you
        need them.'
      type: comment
    - type: command_declaration
      children: []
      left:
        type: rule
        children:
        - type: seq
          children:
          - text: press
            type: word
          - type: capture
            children: []
            capture_name:
              text: user.keys
              type: identifier
      right:
        type: block
        children:
        - type: expression_statement
          children: []
          expression:
            type: key_action
            children: []
            arguments:
              text: keys
              type: implicit_string
