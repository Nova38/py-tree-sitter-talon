input: |
  tag: user.javascript
  -
  tag(): user.code_imperative
  tag(): user.code_object_oriented

  tag(): user.code_comment_line
  tag(): user.code_comment_block_c_like
  tag(): user.code_data_bool
  tag(): user.code_data_null
  tag(): user.code_functions
  tag(): user.code_functions_common
  tag(): user.code_keywords
  tag(): user.code_libraries
  tag(): user.code_operators_array
  tag(): user.code_operators_assignment
  tag(): user.code_operators_bitwise
  tag(): user.code_operators_lambda
  tag(): user.code_operators_math

  settings():
      user.code_private_function_formatter = "PRIVATE_CAMEL_CASE"
      user.code_protected_function_formatter = "PRIVATE_CAMEL_CASE"
      user.code_public_function_formatter = "PRIVATE_CAMEL_CASE"
      user.code_private_variable_formatter = "PRIVATE_CAMEL_CASE"
      user.code_protected_variable_formatter = "PRIVATE_CAMEL_CASE"
      user.code_public_variable_formatter = "PRIVATE_CAMEL_CASE"

  (op | is) strict equal: " === "
  (op | is) strict not equal: " !== "
  op null else: " ?? "

  state const: "const "

  state let: "let "

  state var: "var "

  state export: "export "

  state async: "async "

  state await: "await "

  dot {user.code_common_member_function}:
      user.insert_between(".{code_common_member_function}(", ")")

  state map: app.notify('ERROR: Command deprecated; please use "dot map"')
  state filter: app.notify('ERROR: Command deprecated; please use "dot filter"')
  state reduce: app.notify('ERROR: Command deprecated; please use "dot reduce"')

  state spread: "..."

  from import:
      user.insert_between(' from  "', '"')
output:
  children:
  - children:
    - children:
      - text: tag
        type: identifier
      - text: ' user.javascript'
        type: implicit_string
      key:
        text: tag
        type: identifier
      pattern:
        text: ' user.javascript'
        type: implicit_string
      type: match
    type: context
  - children:
    - text: user.code_imperative
      type: identifier
    tag:
      text: user.code_imperative
      type: identifier
    type: include_tag
  - children:
    - text: user.code_object_oriented
      type: identifier
    tag:
      text: user.code_object_oriented
      type: identifier
    type: include_tag
  - children:
    - text: user.code_comment_line
      type: identifier
    tag:
      text: user.code_comment_line
      type: identifier
    type: include_tag
  - children:
    - text: user.code_comment_block_c_like
      type: identifier
    tag:
      text: user.code_comment_block_c_like
      type: identifier
    type: include_tag
  - children:
    - text: user.code_data_bool
      type: identifier
    tag:
      text: user.code_data_bool
      type: identifier
    type: include_tag
  - children:
    - text: user.code_data_null
      type: identifier
    tag:
      text: user.code_data_null
      type: identifier
    type: include_tag
  - children:
    - text: user.code_functions
      type: identifier
    tag:
      text: user.code_functions
      type: identifier
    type: include_tag
  - children:
    - text: user.code_functions_common
      type: identifier
    tag:
      text: user.code_functions_common
      type: identifier
    type: include_tag
  - children:
    - text: user.code_keywords
      type: identifier
    tag:
      text: user.code_keywords
      type: identifier
    type: include_tag
  - children:
    - text: user.code_libraries
      type: identifier
    tag:
      text: user.code_libraries
      type: identifier
    type: include_tag
  - children:
    - text: user.code_operators_array
      type: identifier
    tag:
      text: user.code_operators_array
      type: identifier
    type: include_tag
  - children:
    - text: user.code_operators_assignment
      type: identifier
    tag:
      text: user.code_operators_assignment
      type: identifier
    type: include_tag
  - children:
    - text: user.code_operators_bitwise
      type: identifier
    tag:
      text: user.code_operators_bitwise
      type: identifier
    type: include_tag
  - children:
    - text: user.code_operators_lambda
      type: identifier
    tag:
      text: user.code_operators_lambda
      type: identifier
    type: include_tag
  - children:
    - text: user.code_operators_math
      type: identifier
    tag:
      text: user.code_operators_math
      type: identifier
    type: include_tag
  - children:
    - children:
      - children:
        - text: user.code_private_function_formatter
          type: identifier
        - children:
          - text: PRIVATE_CAMEL_CASE
            type: string_content
          type: string
        left:
          text: user.code_private_function_formatter
          type: identifier
        right:
          children:
          - text: PRIVATE_CAMEL_CASE
            type: string_content
          type: string
        type: assignment
      - children:
        - text: user.code_protected_function_formatter
          type: identifier
        - children:
          - text: PRIVATE_CAMEL_CASE
            type: string_content
          type: string
        left:
          text: user.code_protected_function_formatter
          type: identifier
        right:
          children:
          - text: PRIVATE_CAMEL_CASE
            type: string_content
          type: string
        type: assignment
      - children:
        - text: user.code_public_function_formatter
          type: identifier
        - children:
          - text: PRIVATE_CAMEL_CASE
            type: string_content
          type: string
        left:
          text: user.code_public_function_formatter
          type: identifier
        right:
          children:
          - text: PRIVATE_CAMEL_CASE
            type: string_content
          type: string
        type: assignment
      - children:
        - text: user.code_private_variable_formatter
          type: identifier
        - children:
          - text: PRIVATE_CAMEL_CASE
            type: string_content
          type: string
        left:
          text: user.code_private_variable_formatter
          type: identifier
        right:
          children:
          - text: PRIVATE_CAMEL_CASE
            type: string_content
          type: string
        type: assignment
      - children:
        - text: user.code_protected_variable_formatter
          type: identifier
        - children:
          - text: PRIVATE_CAMEL_CASE
            type: string_content
          type: string
        left:
          text: user.code_protected_variable_formatter
          type: identifier
        right:
          children:
          - text: PRIVATE_CAMEL_CASE
            type: string_content
          type: string
        type: assignment
      - children:
        - text: user.code_public_variable_formatter
          type: identifier
        - children:
          - text: PRIVATE_CAMEL_CASE
            type: string_content
          type: string
        left:
          text: user.code_public_variable_formatter
          type: identifier
        right:
          children:
          - text: PRIVATE_CAMEL_CASE
            type: string_content
          type: string
        type: assignment
      type: block
    type: settings
  - children:
    - children:
      - children:
        - children:
          - children:
            - text: op
              type: word
            - text: is
              type: word
            type: choice
          type: parenthesized_rule
        - text: strict
          type: word
        - text: equal
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - children:
          - text: ' === '
            type: string_content
          type: string
        expression:
          children:
          - text: ' === '
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - children:
        - children:
          - children:
            - text: op
              type: word
            - text: is
              type: word
            type: choice
          type: parenthesized_rule
        - text: strict
          type: word
        - text: equal
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - children:
          - text: ' === '
            type: string_content
          type: string
        expression:
          children:
          - text: ' === '
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - children:
          - children:
            - text: op
              type: word
            - text: is
              type: word
            type: choice
          type: parenthesized_rule
        - text: strict
          type: word
        - text: not
          type: word
        - text: equal
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - children:
          - text: ' !== '
            type: string_content
          type: string
        expression:
          children:
          - text: ' !== '
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - children:
        - children:
          - children:
            - text: op
              type: word
            - text: is
              type: word
            type: choice
          type: parenthesized_rule
        - text: strict
          type: word
        - text: not
          type: word
        - text: equal
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - children:
          - text: ' !== '
            type: string_content
          type: string
        expression:
          children:
          - text: ' !== '
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: op
          type: word
        - text: 'null'
          type: word
        - text: else
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - children:
          - text: ' ?? '
            type: string_content
          type: string
        expression:
          children:
          - text: ' ?? '
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: op
          type: word
        - text: 'null'
          type: word
        - text: else
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - children:
          - text: ' ?? '
            type: string_content
          type: string
        expression:
          children:
          - text: ' ?? '
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: state
          type: word
        - text: const
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - children:
          - text: 'const '
            type: string_content
          type: string
        expression:
          children:
          - text: 'const '
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - text: const
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - children:
          - text: 'const '
            type: string_content
          type: string
        expression:
          children:
          - text: 'const '
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: state
          type: word
        - text: let
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - children:
          - text: 'let '
            type: string_content
          type: string
        expression:
          children:
          - text: 'let '
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - text: let
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - children:
          - text: 'let '
            type: string_content
          type: string
        expression:
          children:
          - text: 'let '
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: state
          type: word
        - text: var
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - children:
          - text: 'var '
            type: string_content
          type: string
        expression:
          children:
          - text: 'var '
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - text: var
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - children:
          - text: 'var '
            type: string_content
          type: string
        expression:
          children:
          - text: 'var '
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: state
          type: word
        - text: export
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - children:
          - text: 'export '
            type: string_content
          type: string
        expression:
          children:
          - text: 'export '
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - text: export
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - children:
          - text: 'export '
            type: string_content
          type: string
        expression:
          children:
          - text: 'export '
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: state
          type: word
        - text: async
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - children:
          - text: 'async '
            type: string_content
          type: string
        expression:
          children:
          - text: 'async '
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - text: async
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - children:
          - text: 'async '
            type: string_content
          type: string
        expression:
          children:
          - text: 'async '
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: state
          type: word
        - text: await
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - children:
          - text: 'await '
            type: string_content
          type: string
        expression:
          children:
          - text: 'await '
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - text: await
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - children:
          - text: 'await '
            type: string_content
          type: string
        expression:
          children:
          - text: 'await '
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: dot
          type: word
        - children:
          - text: user.code_common_member_function
            type: identifier
          list_name:
            text: user.code_common_member_function
            type: identifier
          type: list
        type: seq
      type: rule
    - children:
      - children:
        - action_name:
            text: user.insert_between
            type: identifier
          arguments:
            children:
            - children:
              - text: .
                type: string_content
              - text: '{'
                type: string_content
              - text: code_common_member_function
                type: string_content
              - text: '}'
                type: string_content
              - text: (
                type: string_content
              type: string
            - children:
              - text: )
                type: string_content
              type: string
            type: argument_list
          children:
          - text: user.insert_between
            type: identifier
          - children:
            - children:
              - text: .
                type: string_content
              - text: '{'
                type: string_content
              - text: code_common_member_function
                type: string_content
              - text: '}'
                type: string_content
              - text: (
                type: string_content
              type: string
            - children:
              - text: )
                type: string_content
              type: string
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.insert_between
            type: identifier
          arguments:
            children:
            - children:
              - text: .
                type: string_content
              - text: '{'
                type: string_content
              - text: code_common_member_function
                type: string_content
              - text: '}'
                type: string_content
              - text: (
                type: string_content
              type: string
            - children:
              - text: )
                type: string_content
              type: string
            type: argument_list
          children:
          - text: user.insert_between
            type: identifier
          - children:
            - children:
              - text: .
                type: string_content
              - text: '{'
                type: string_content
              - text: code_common_member_function
                type: string_content
              - text: '}'
                type: string_content
              - text: (
                type: string_content
              type: string
            - children:
              - text: )
                type: string_content
              type: string
            type: argument_list
          type: action
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: dot
          type: word
        - children:
          - text: user.code_common_member_function
            type: identifier
          list_name:
            text: user.code_common_member_function
            type: identifier
          type: list
        type: seq
      type: rule
    script:
      children:
      - children:
        - action_name:
            text: user.insert_between
            type: identifier
          arguments:
            children:
            - children:
              - text: .
                type: string_content
              - text: '{'
                type: string_content
              - text: code_common_member_function
                type: string_content
              - text: '}'
                type: string_content
              - text: (
                type: string_content
              type: string
            - children:
              - text: )
                type: string_content
              type: string
            type: argument_list
          children:
          - text: user.insert_between
            type: identifier
          - children:
            - children:
              - text: .
                type: string_content
              - text: '{'
                type: string_content
              - text: code_common_member_function
                type: string_content
              - text: '}'
                type: string_content
              - text: (
                type: string_content
              type: string
            - children:
              - text: )
                type: string_content
              type: string
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.insert_between
            type: identifier
          arguments:
            children:
            - children:
              - text: .
                type: string_content
              - text: '{'
                type: string_content
              - text: code_common_member_function
                type: string_content
              - text: '}'
                type: string_content
              - text: (
                type: string_content
              type: string
            - children:
              - text: )
                type: string_content
              type: string
            type: argument_list
          children:
          - text: user.insert_between
            type: identifier
          - children:
            - children:
              - text: .
                type: string_content
              - text: '{'
                type: string_content
              - text: code_common_member_function
                type: string_content
              - text: '}'
                type: string_content
              - text: (
                type: string_content
              type: string
            - children:
              - text: )
                type: string_content
              type: string
            type: argument_list
          type: action
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: state
          type: word
        - text: map
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - action_name:
            text: app.notify
            type: identifier
          arguments:
            children:
            - children:
              - text: 'ERROR: Command deprecated; please use "dot map"'
                type: string_content
              type: string
            type: argument_list
          children:
          - text: app.notify
            type: identifier
          - children:
            - children:
              - text: 'ERROR: Command deprecated; please use "dot map"'
                type: string_content
              type: string
            type: argument_list
          type: action
        expression:
          action_name:
            text: app.notify
            type: identifier
          arguments:
            children:
            - children:
              - text: 'ERROR: Command deprecated; please use "dot map"'
                type: string_content
              type: string
            type: argument_list
          children:
          - text: app.notify
            type: identifier
          - children:
            - children:
              - text: 'ERROR: Command deprecated; please use "dot map"'
                type: string_content
              type: string
            type: argument_list
          type: action
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - text: map
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - action_name:
            text: app.notify
            type: identifier
          arguments:
            children:
            - children:
              - text: 'ERROR: Command deprecated; please use "dot map"'
                type: string_content
              type: string
            type: argument_list
          children:
          - text: app.notify
            type: identifier
          - children:
            - children:
              - text: 'ERROR: Command deprecated; please use "dot map"'
                type: string_content
              type: string
            type: argument_list
          type: action
        expression:
          action_name:
            text: app.notify
            type: identifier
          arguments:
            children:
            - children:
              - text: 'ERROR: Command deprecated; please use "dot map"'
                type: string_content
              type: string
            type: argument_list
          children:
          - text: app.notify
            type: identifier
          - children:
            - children:
              - text: 'ERROR: Command deprecated; please use "dot map"'
                type: string_content
              type: string
            type: argument_list
          type: action
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: state
          type: word
        - text: filter
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - action_name:
            text: app.notify
            type: identifier
          arguments:
            children:
            - children:
              - text: 'ERROR: Command deprecated; please use "dot filter"'
                type: string_content
              type: string
            type: argument_list
          children:
          - text: app.notify
            type: identifier
          - children:
            - children:
              - text: 'ERROR: Command deprecated; please use "dot filter"'
                type: string_content
              type: string
            type: argument_list
          type: action
        expression:
          action_name:
            text: app.notify
            type: identifier
          arguments:
            children:
            - children:
              - text: 'ERROR: Command deprecated; please use "dot filter"'
                type: string_content
              type: string
            type: argument_list
          children:
          - text: app.notify
            type: identifier
          - children:
            - children:
              - text: 'ERROR: Command deprecated; please use "dot filter"'
                type: string_content
              type: string
            type: argument_list
          type: action
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - text: filter
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - action_name:
            text: app.notify
            type: identifier
          arguments:
            children:
            - children:
              - text: 'ERROR: Command deprecated; please use "dot filter"'
                type: string_content
              type: string
            type: argument_list
          children:
          - text: app.notify
            type: identifier
          - children:
            - children:
              - text: 'ERROR: Command deprecated; please use "dot filter"'
                type: string_content
              type: string
            type: argument_list
          type: action
        expression:
          action_name:
            text: app.notify
            type: identifier
          arguments:
            children:
            - children:
              - text: 'ERROR: Command deprecated; please use "dot filter"'
                type: string_content
              type: string
            type: argument_list
          children:
          - text: app.notify
            type: identifier
          - children:
            - children:
              - text: 'ERROR: Command deprecated; please use "dot filter"'
                type: string_content
              type: string
            type: argument_list
          type: action
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: state
          type: word
        - text: reduce
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - action_name:
            text: app.notify
            type: identifier
          arguments:
            children:
            - children:
              - text: 'ERROR: Command deprecated; please use "dot reduce"'
                type: string_content
              type: string
            type: argument_list
          children:
          - text: app.notify
            type: identifier
          - children:
            - children:
              - text: 'ERROR: Command deprecated; please use "dot reduce"'
                type: string_content
              type: string
            type: argument_list
          type: action
        expression:
          action_name:
            text: app.notify
            type: identifier
          arguments:
            children:
            - children:
              - text: 'ERROR: Command deprecated; please use "dot reduce"'
                type: string_content
              type: string
            type: argument_list
          children:
          - text: app.notify
            type: identifier
          - children:
            - children:
              - text: 'ERROR: Command deprecated; please use "dot reduce"'
                type: string_content
              type: string
            type: argument_list
          type: action
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - text: reduce
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - action_name:
            text: app.notify
            type: identifier
          arguments:
            children:
            - children:
              - text: 'ERROR: Command deprecated; please use "dot reduce"'
                type: string_content
              type: string
            type: argument_list
          children:
          - text: app.notify
            type: identifier
          - children:
            - children:
              - text: 'ERROR: Command deprecated; please use "dot reduce"'
                type: string_content
              type: string
            type: argument_list
          type: action
        expression:
          action_name:
            text: app.notify
            type: identifier
          arguments:
            children:
            - children:
              - text: 'ERROR: Command deprecated; please use "dot reduce"'
                type: string_content
              type: string
            type: argument_list
          children:
          - text: app.notify
            type: identifier
          - children:
            - children:
              - text: 'ERROR: Command deprecated; please use "dot reduce"'
                type: string_content
              type: string
            type: argument_list
          type: action
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: state
          type: word
        - text: spread
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - children:
          - text: '...'
            type: string_content
          type: string
        expression:
          children:
          - text: '...'
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - text: spread
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - children:
          - text: '...'
            type: string_content
          type: string
        expression:
          children:
          - text: '...'
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: from
          type: word
        - text: import
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - action_name:
            text: user.insert_between
            type: identifier
          arguments:
            children:
            - children:
              - text: ' from  "'
                type: string_content
              type: string
            - children:
              - text: '"'
                type: string_content
              type: string
            type: argument_list
          children:
          - text: user.insert_between
            type: identifier
          - children:
            - children:
              - text: ' from  "'
                type: string_content
              type: string
            - children:
              - text: '"'
                type: string_content
              type: string
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.insert_between
            type: identifier
          arguments:
            children:
            - children:
              - text: ' from  "'
                type: string_content
              type: string
            - children:
              - text: '"'
                type: string_content
              type: string
            type: argument_list
          children:
          - text: user.insert_between
            type: identifier
          - children:
            - children:
              - text: ' from  "'
                type: string_content
              type: string
            - children:
              - text: '"'
                type: string_content
              type: string
            type: argument_list
          type: action
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: from
          type: word
        - text: import
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - action_name:
            text: user.insert_between
            type: identifier
          arguments:
            children:
            - children:
              - text: ' from  "'
                type: string_content
              type: string
            - children:
              - text: '"'
                type: string_content
              type: string
            type: argument_list
          children:
          - text: user.insert_between
            type: identifier
          - children:
            - children:
              - text: ' from  "'
                type: string_content
              type: string
            - children:
              - text: '"'
                type: string_content
              type: string
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.insert_between
            type: identifier
          arguments:
            children:
            - children:
              - text: ' from  "'
                type: string_content
              type: string
            - children:
              - text: '"'
                type: string_content
              type: string
            type: argument_list
          children:
          - text: user.insert_between
            type: identifier
          - children:
            - children:
              - text: ' from  "'
                type: string_content
              type: string
            - children:
              - text: '"'
                type: string_content
              type: string
            type: argument_list
          type: action
        type: expression
      type: block
    type: command
  type: source_file
