input: |
  tag: user.rust
  -
  tag(): user.code_comment_line
  tag(): user.code_comment_block_c_like
  tag(): user.code_comment_documentation

  tag(): user.code_imperative
  tag(): user.code_object_oriented

  tag(): user.code_data_bool
  tag(): user.code_data_null

  tag(): user.code_functions
  tag(): user.code_functions_common
  tag(): user.code_libraries
  tag(): user.code_libraries_gui

  tag(): user.code_operators_array
  tag(): user.code_operators_assignment
  tag(): user.code_operators_bitwise
  tag(): user.code_operators_math

  settings():
      user.code_private_function_formatter = "SNAKE_CASE"
      user.code_protected_function_formatter = "SNAKE_CASE"
      user.code_public_function_formatter = "SNAKE_CASE"
      user.code_private_variable_formatter = "SNAKE_CASE"
      user.code_protected_variable_formatter = "SNAKE_CASE"
      user.code_public_variable_formatter = "SNAKE_CASE"

  # rust-specific grammars

  ## for unsafe rust
  state unsafe: "unsafe "
  unsafe block: user.code_state_unsafe()

  ## rust centric struct and enum definitions
  state (struct | structure) <user.text>:
      insert("struct ")
      insert(user.formatted_text(text, "PUBLIC_CAMEL_CASE"))

  state enum <user.text>:
      insert("enum ")
      insert(user.formatted_text(text, "PUBLIC_CAMEL_CASE"))

  toggle use: user.code_toggle_libraries()

  ## Simple aliases
  borrow: "&"
  borrow mutable: "&mut "
  state (pub | public): "pub "
  state (pub | public) crate: "pub(crate) "
  state (dyn | dynamic): "dyn "
  state constant: "const "
  state (funk | func | function): "fn "
  state (imp | implements): "impl "
  state let mute: "let mut "
  state let: "let "
  state (mute | mutable): "mut "
  state (mod | module): "mod "
  state ref (mute | mutable): "ref mut "
  state ref: "ref "
  state trait: "trait "
  state match: user.code_state_switch()
  state (some | sum): "Some"
  state static: "static "
  self taught: "self."
  state use: user.code_import()

  use <user.code_libraries>:
      user.code_insert_library(code_libraries, "")
      key(semicolon enter)

  ## specialist flow control
  state if let some: user.code_insert_if_let_some()
  state if let error: user.code_insert_if_let_error()

  ## rust centric synonyms
  is some: user.code_insert_is_not_null()

  ## for implementing
  implement (struct | structure): user.code_state_implements()

  ## for annotating function parameters
  is implemented trait {user.code_trait}: user.code_insert_trait_annotation(code_trait)
  is implemented trait: ": impl "
  returns implemented trait {user.code_trait}: user.code_insert_return_trait(code_trait)
  returns implemented trait: " -> impl "

  ## for generic reference of traits
  trait {user.code_trait}: insert("{code_trait}")
  implemented trait {user.code_trait}: insert("impl {code_trait}")
  dynamic trait {user.code_trait}: insert("dyn {code_trait}")

  ## for generic reference of macro
  macro {user.code_macros}:
      user.code_insert_macro(code_macros, "")
  macro wrap {user.code_macros}:
      user.code_insert_macro(code_macros, edit.selected_text())

  ## rust specific document comments
  block dock comment: user.code_comment_documentation_block()
  inner dock comment: user.code_comment_documentation_inner()
  inner block dock comment: user.code_comment_documentation_block_inner()
output:
  children:
  - children:
    - children:
      - text: tag
        type: identifier
      - text: ' user.rust'
        type: implicit_string
      key:
        text: tag
        type: identifier
      pattern:
        text: ' user.rust'
        type: implicit_string
      type: match
    type: context
  - children:
    - text: user.code_comment_line
      type: identifier
    tag:
      text: user.code_comment_line
      type: identifier
    type: include_tag
  - children:
    - text: user.code_comment_block_c_like
      type: identifier
    tag:
      text: user.code_comment_block_c_like
      type: identifier
    type: include_tag
  - children:
    - text: user.code_comment_documentation
      type: identifier
    tag:
      text: user.code_comment_documentation
      type: identifier
    type: include_tag
  - children:
    - text: user.code_imperative
      type: identifier
    tag:
      text: user.code_imperative
      type: identifier
    type: include_tag
  - children:
    - text: user.code_object_oriented
      type: identifier
    tag:
      text: user.code_object_oriented
      type: identifier
    type: include_tag
  - children:
    - text: user.code_data_bool
      type: identifier
    tag:
      text: user.code_data_bool
      type: identifier
    type: include_tag
  - children:
    - text: user.code_data_null
      type: identifier
    tag:
      text: user.code_data_null
      type: identifier
    type: include_tag
  - children:
    - text: user.code_functions
      type: identifier
    tag:
      text: user.code_functions
      type: identifier
    type: include_tag
  - children:
    - text: user.code_functions_common
      type: identifier
    tag:
      text: user.code_functions_common
      type: identifier
    type: include_tag
  - children:
    - text: user.code_libraries
      type: identifier
    tag:
      text: user.code_libraries
      type: identifier
    type: include_tag
  - children:
    - text: user.code_libraries_gui
      type: identifier
    tag:
      text: user.code_libraries_gui
      type: identifier
    type: include_tag
  - children:
    - text: user.code_operators_array
      type: identifier
    tag:
      text: user.code_operators_array
      type: identifier
    type: include_tag
  - children:
    - text: user.code_operators_assignment
      type: identifier
    tag:
      text: user.code_operators_assignment
      type: identifier
    type: include_tag
  - children:
    - text: user.code_operators_bitwise
      type: identifier
    tag:
      text: user.code_operators_bitwise
      type: identifier
    type: include_tag
  - children:
    - text: user.code_operators_math
      type: identifier
    tag:
      text: user.code_operators_math
      type: identifier
    type: include_tag
  - children:
    - children:
      - children:
        - text: user.code_private_function_formatter
          type: identifier
        - children:
          - text: SNAKE_CASE
            type: string_content
          type: string
        left:
          text: user.code_private_function_formatter
          type: identifier
        right:
          children:
          - text: SNAKE_CASE
            type: string_content
          type: string
        type: assignment
      - children:
        - text: user.code_protected_function_formatter
          type: identifier
        - children:
          - text: SNAKE_CASE
            type: string_content
          type: string
        left:
          text: user.code_protected_function_formatter
          type: identifier
        right:
          children:
          - text: SNAKE_CASE
            type: string_content
          type: string
        type: assignment
      - children:
        - text: user.code_public_function_formatter
          type: identifier
        - children:
          - text: SNAKE_CASE
            type: string_content
          type: string
        left:
          text: user.code_public_function_formatter
          type: identifier
        right:
          children:
          - text: SNAKE_CASE
            type: string_content
          type: string
        type: assignment
      - children:
        - text: user.code_private_variable_formatter
          type: identifier
        - children:
          - text: SNAKE_CASE
            type: string_content
          type: string
        left:
          text: user.code_private_variable_formatter
          type: identifier
        right:
          children:
          - text: SNAKE_CASE
            type: string_content
          type: string
        type: assignment
      - children:
        - text: user.code_protected_variable_formatter
          type: identifier
        - children:
          - text: SNAKE_CASE
            type: string_content
          type: string
        left:
          text: user.code_protected_variable_formatter
          type: identifier
        right:
          children:
          - text: SNAKE_CASE
            type: string_content
          type: string
        type: assignment
      - children:
        - text: user.code_public_variable_formatter
          type: identifier
        - children:
          - text: SNAKE_CASE
            type: string_content
          type: string
        left:
          text: user.code_public_variable_formatter
          type: identifier
        right:
          children:
          - text: SNAKE_CASE
            type: string_content
          type: string
        type: assignment
      type: block
    type: settings
  - text: '# rust-specific grammars'
    type: comment
  - text: '## for unsafe rust'
    type: comment
  - children:
    - children:
      - children:
        - text: state
          type: word
        - text: unsafe
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - children:
          - text: 'unsafe '
            type: string_content
          type: string
        expression:
          children:
          - text: 'unsafe '
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - text: unsafe
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - children:
          - text: 'unsafe '
            type: string_content
          type: string
        expression:
          children:
          - text: 'unsafe '
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: unsafe
          type: word
        - text: block
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - action_name:
            text: user.code_state_unsafe
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_state_unsafe
            type: identifier
          - children: []
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_state_unsafe
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_state_unsafe
            type: identifier
          - children: []
            type: argument_list
          type: action
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: unsafe
          type: word
        - text: block
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - action_name:
            text: user.code_state_unsafe
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_state_unsafe
            type: identifier
          - children: []
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_state_unsafe
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_state_unsafe
            type: identifier
          - children: []
            type: argument_list
          type: action
        type: expression
      type: block
    type: command
  - text: '## rust centric struct and enum definitions'
    type: comment
  - children:
    - children:
      - children:
        - text: state
          type: word
        - children:
          - children:
            - text: struct
              type: word
            - text: structure
              type: word
            type: choice
          type: parenthesized_rule
        - capture_name:
            text: user.text
            type: identifier
          children:
          - text: user.text
            type: identifier
          type: capture
        type: seq
      type: rule
    - children:
      - children:
        - action_name:
            text: insert
            type: identifier
          arguments:
            children:
            - children:
              - text: 'struct '
                type: string_content
              type: string
            type: argument_list
          children:
          - text: insert
            type: identifier
          - children:
            - children:
              - text: 'struct '
                type: string_content
              type: string
            type: argument_list
          type: action
        expression:
          action_name:
            text: insert
            type: identifier
          arguments:
            children:
            - children:
              - text: 'struct '
                type: string_content
              type: string
            type: argument_list
          children:
          - text: insert
            type: identifier
          - children:
            - children:
              - text: 'struct '
                type: string_content
              type: string
            type: argument_list
          type: action
        type: expression
      - children:
        - action_name:
            text: insert
            type: identifier
          arguments:
            children:
            - action_name:
                text: user.formatted_text
                type: identifier
              arguments:
                children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              children:
              - text: user.formatted_text
                type: identifier
              - children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              type: action
            type: argument_list
          children:
          - text: insert
            type: identifier
          - children:
            - action_name:
                text: user.formatted_text
                type: identifier
              arguments:
                children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              children:
              - text: user.formatted_text
                type: identifier
              - children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              type: action
            type: argument_list
          type: action
        expression:
          action_name:
            text: insert
            type: identifier
          arguments:
            children:
            - action_name:
                text: user.formatted_text
                type: identifier
              arguments:
                children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              children:
              - text: user.formatted_text
                type: identifier
              - children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              type: action
            type: argument_list
          children:
          - text: insert
            type: identifier
          - children:
            - action_name:
                text: user.formatted_text
                type: identifier
              arguments:
                children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              children:
              - text: user.formatted_text
                type: identifier
              - children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              type: action
            type: argument_list
          type: action
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - children:
          - children:
            - text: struct
              type: word
            - text: structure
              type: word
            type: choice
          type: parenthesized_rule
        - capture_name:
            text: user.text
            type: identifier
          children:
          - text: user.text
            type: identifier
          type: capture
        type: seq
      type: rule
    script:
      children:
      - children:
        - action_name:
            text: insert
            type: identifier
          arguments:
            children:
            - children:
              - text: 'struct '
                type: string_content
              type: string
            type: argument_list
          children:
          - text: insert
            type: identifier
          - children:
            - children:
              - text: 'struct '
                type: string_content
              type: string
            type: argument_list
          type: action
        expression:
          action_name:
            text: insert
            type: identifier
          arguments:
            children:
            - children:
              - text: 'struct '
                type: string_content
              type: string
            type: argument_list
          children:
          - text: insert
            type: identifier
          - children:
            - children:
              - text: 'struct '
                type: string_content
              type: string
            type: argument_list
          type: action
        type: expression
      - children:
        - action_name:
            text: insert
            type: identifier
          arguments:
            children:
            - action_name:
                text: user.formatted_text
                type: identifier
              arguments:
                children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              children:
              - text: user.formatted_text
                type: identifier
              - children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              type: action
            type: argument_list
          children:
          - text: insert
            type: identifier
          - children:
            - action_name:
                text: user.formatted_text
                type: identifier
              arguments:
                children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              children:
              - text: user.formatted_text
                type: identifier
              - children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              type: action
            type: argument_list
          type: action
        expression:
          action_name:
            text: insert
            type: identifier
          arguments:
            children:
            - action_name:
                text: user.formatted_text
                type: identifier
              arguments:
                children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              children:
              - text: user.formatted_text
                type: identifier
              - children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              type: action
            type: argument_list
          children:
          - text: insert
            type: identifier
          - children:
            - action_name:
                text: user.formatted_text
                type: identifier
              arguments:
                children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              children:
              - text: user.formatted_text
                type: identifier
              - children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              type: action
            type: argument_list
          type: action
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: state
          type: word
        - text: enum
          type: word
        - capture_name:
            text: user.text
            type: identifier
          children:
          - text: user.text
            type: identifier
          type: capture
        type: seq
      type: rule
    - children:
      - children:
        - action_name:
            text: insert
            type: identifier
          arguments:
            children:
            - children:
              - text: 'enum '
                type: string_content
              type: string
            type: argument_list
          children:
          - text: insert
            type: identifier
          - children:
            - children:
              - text: 'enum '
                type: string_content
              type: string
            type: argument_list
          type: action
        expression:
          action_name:
            text: insert
            type: identifier
          arguments:
            children:
            - children:
              - text: 'enum '
                type: string_content
              type: string
            type: argument_list
          children:
          - text: insert
            type: identifier
          - children:
            - children:
              - text: 'enum '
                type: string_content
              type: string
            type: argument_list
          type: action
        type: expression
      - children:
        - action_name:
            text: insert
            type: identifier
          arguments:
            children:
            - action_name:
                text: user.formatted_text
                type: identifier
              arguments:
                children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              children:
              - text: user.formatted_text
                type: identifier
              - children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              type: action
            type: argument_list
          children:
          - text: insert
            type: identifier
          - children:
            - action_name:
                text: user.formatted_text
                type: identifier
              arguments:
                children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              children:
              - text: user.formatted_text
                type: identifier
              - children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              type: action
            type: argument_list
          type: action
        expression:
          action_name:
            text: insert
            type: identifier
          arguments:
            children:
            - action_name:
                text: user.formatted_text
                type: identifier
              arguments:
                children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              children:
              - text: user.formatted_text
                type: identifier
              - children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              type: action
            type: argument_list
          children:
          - text: insert
            type: identifier
          - children:
            - action_name:
                text: user.formatted_text
                type: identifier
              arguments:
                children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              children:
              - text: user.formatted_text
                type: identifier
              - children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              type: action
            type: argument_list
          type: action
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - text: enum
          type: word
        - capture_name:
            text: user.text
            type: identifier
          children:
          - text: user.text
            type: identifier
          type: capture
        type: seq
      type: rule
    script:
      children:
      - children:
        - action_name:
            text: insert
            type: identifier
          arguments:
            children:
            - children:
              - text: 'enum '
                type: string_content
              type: string
            type: argument_list
          children:
          - text: insert
            type: identifier
          - children:
            - children:
              - text: 'enum '
                type: string_content
              type: string
            type: argument_list
          type: action
        expression:
          action_name:
            text: insert
            type: identifier
          arguments:
            children:
            - children:
              - text: 'enum '
                type: string_content
              type: string
            type: argument_list
          children:
          - text: insert
            type: identifier
          - children:
            - children:
              - text: 'enum '
                type: string_content
              type: string
            type: argument_list
          type: action
        type: expression
      - children:
        - action_name:
            text: insert
            type: identifier
          arguments:
            children:
            - action_name:
                text: user.formatted_text
                type: identifier
              arguments:
                children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              children:
              - text: user.formatted_text
                type: identifier
              - children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              type: action
            type: argument_list
          children:
          - text: insert
            type: identifier
          - children:
            - action_name:
                text: user.formatted_text
                type: identifier
              arguments:
                children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              children:
              - text: user.formatted_text
                type: identifier
              - children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              type: action
            type: argument_list
          type: action
        expression:
          action_name:
            text: insert
            type: identifier
          arguments:
            children:
            - action_name:
                text: user.formatted_text
                type: identifier
              arguments:
                children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              children:
              - text: user.formatted_text
                type: identifier
              - children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              type: action
            type: argument_list
          children:
          - text: insert
            type: identifier
          - children:
            - action_name:
                text: user.formatted_text
                type: identifier
              arguments:
                children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              children:
              - text: user.formatted_text
                type: identifier
              - children:
                - children:
                  - text: text
                    type: identifier
                  type: variable
                  variable_name:
                    text: text
                    type: identifier
                - children:
                  - text: PUBLIC_CAMEL_CASE
                    type: string_content
                  type: string
                type: argument_list
              type: action
            type: argument_list
          type: action
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: toggle
          type: word
        - text: use
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - action_name:
            text: user.code_toggle_libraries
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_toggle_libraries
            type: identifier
          - children: []
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_toggle_libraries
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_toggle_libraries
            type: identifier
          - children: []
            type: argument_list
          type: action
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: toggle
          type: word
        - text: use
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - action_name:
            text: user.code_toggle_libraries
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_toggle_libraries
            type: identifier
          - children: []
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_toggle_libraries
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_toggle_libraries
            type: identifier
          - children: []
            type: argument_list
          type: action
        type: expression
      type: block
    type: command
  - text: '## Simple aliases'
    type: comment
  - children:
    - children:
      - text: borrow
        type: word
      type: rule
    - children:
      - children:
        - children:
          - text: '&'
            type: string_content
          type: string
        expression:
          children:
          - text: '&'
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - text: borrow
        type: word
      type: rule
    script:
      children:
      - children:
        - children:
          - text: '&'
            type: string_content
          type: string
        expression:
          children:
          - text: '&'
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: borrow
          type: word
        - text: mutable
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - children:
          - text: '&mut '
            type: string_content
          type: string
        expression:
          children:
          - text: '&mut '
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: borrow
          type: word
        - text: mutable
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - children:
          - text: '&mut '
            type: string_content
          type: string
        expression:
          children:
          - text: '&mut '
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: state
          type: word
        - children:
          - children:
            - text: pub
              type: word
            - text: public
              type: word
            type: choice
          type: parenthesized_rule
        type: seq
      type: rule
    - children:
      - children:
        - children:
          - text: 'pub '
            type: string_content
          type: string
        expression:
          children:
          - text: 'pub '
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - children:
          - children:
            - text: pub
              type: word
            - text: public
              type: word
            type: choice
          type: parenthesized_rule
        type: seq
      type: rule
    script:
      children:
      - children:
        - children:
          - text: 'pub '
            type: string_content
          type: string
        expression:
          children:
          - text: 'pub '
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: state
          type: word
        - children:
          - children:
            - text: pub
              type: word
            - text: public
              type: word
            type: choice
          type: parenthesized_rule
        - text: crate
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - children:
          - text: 'pub(crate) '
            type: string_content
          type: string
        expression:
          children:
          - text: 'pub(crate) '
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - children:
          - children:
            - text: pub
              type: word
            - text: public
              type: word
            type: choice
          type: parenthesized_rule
        - text: crate
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - children:
          - text: 'pub(crate) '
            type: string_content
          type: string
        expression:
          children:
          - text: 'pub(crate) '
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: state
          type: word
        - children:
          - children:
            - text: dyn
              type: word
            - text: dynamic
              type: word
            type: choice
          type: parenthesized_rule
        type: seq
      type: rule
    - children:
      - children:
        - children:
          - text: 'dyn '
            type: string_content
          type: string
        expression:
          children:
          - text: 'dyn '
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - children:
          - children:
            - text: dyn
              type: word
            - text: dynamic
              type: word
            type: choice
          type: parenthesized_rule
        type: seq
      type: rule
    script:
      children:
      - children:
        - children:
          - text: 'dyn '
            type: string_content
          type: string
        expression:
          children:
          - text: 'dyn '
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: state
          type: word
        - text: constant
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - children:
          - text: 'const '
            type: string_content
          type: string
        expression:
          children:
          - text: 'const '
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - text: constant
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - children:
          - text: 'const '
            type: string_content
          type: string
        expression:
          children:
          - text: 'const '
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: state
          type: word
        - children:
          - children:
            - text: funk
              type: word
            - text: func
              type: word
            - text: function
              type: word
            type: choice
          type: parenthesized_rule
        type: seq
      type: rule
    - children:
      - children:
        - children:
          - text: 'fn '
            type: string_content
          type: string
        expression:
          children:
          - text: 'fn '
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - children:
          - children:
            - text: funk
              type: word
            - text: func
              type: word
            - text: function
              type: word
            type: choice
          type: parenthesized_rule
        type: seq
      type: rule
    script:
      children:
      - children:
        - children:
          - text: 'fn '
            type: string_content
          type: string
        expression:
          children:
          - text: 'fn '
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: state
          type: word
        - children:
          - children:
            - text: imp
              type: word
            - text: implements
              type: word
            type: choice
          type: parenthesized_rule
        type: seq
      type: rule
    - children:
      - children:
        - children:
          - text: 'impl '
            type: string_content
          type: string
        expression:
          children:
          - text: 'impl '
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - children:
          - children:
            - text: imp
              type: word
            - text: implements
              type: word
            type: choice
          type: parenthesized_rule
        type: seq
      type: rule
    script:
      children:
      - children:
        - children:
          - text: 'impl '
            type: string_content
          type: string
        expression:
          children:
          - text: 'impl '
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: state
          type: word
        - text: let
          type: word
        - text: mute
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - children:
          - text: 'let mut '
            type: string_content
          type: string
        expression:
          children:
          - text: 'let mut '
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - text: let
          type: word
        - text: mute
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - children:
          - text: 'let mut '
            type: string_content
          type: string
        expression:
          children:
          - text: 'let mut '
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: state
          type: word
        - text: let
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - children:
          - text: 'let '
            type: string_content
          type: string
        expression:
          children:
          - text: 'let '
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - text: let
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - children:
          - text: 'let '
            type: string_content
          type: string
        expression:
          children:
          - text: 'let '
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: state
          type: word
        - children:
          - children:
            - text: mute
              type: word
            - text: mutable
              type: word
            type: choice
          type: parenthesized_rule
        type: seq
      type: rule
    - children:
      - children:
        - children:
          - text: 'mut '
            type: string_content
          type: string
        expression:
          children:
          - text: 'mut '
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - children:
          - children:
            - text: mute
              type: word
            - text: mutable
              type: word
            type: choice
          type: parenthesized_rule
        type: seq
      type: rule
    script:
      children:
      - children:
        - children:
          - text: 'mut '
            type: string_content
          type: string
        expression:
          children:
          - text: 'mut '
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: state
          type: word
        - children:
          - children:
            - text: mod
              type: word
            - text: module
              type: word
            type: choice
          type: parenthesized_rule
        type: seq
      type: rule
    - children:
      - children:
        - children:
          - text: 'mod '
            type: string_content
          type: string
        expression:
          children:
          - text: 'mod '
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - children:
          - children:
            - text: mod
              type: word
            - text: module
              type: word
            type: choice
          type: parenthesized_rule
        type: seq
      type: rule
    script:
      children:
      - children:
        - children:
          - text: 'mod '
            type: string_content
          type: string
        expression:
          children:
          - text: 'mod '
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: state
          type: word
        - text: ref
          type: word
        - children:
          - children:
            - text: mute
              type: word
            - text: mutable
              type: word
            type: choice
          type: parenthesized_rule
        type: seq
      type: rule
    - children:
      - children:
        - children:
          - text: 'ref mut '
            type: string_content
          type: string
        expression:
          children:
          - text: 'ref mut '
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - text: ref
          type: word
        - children:
          - children:
            - text: mute
              type: word
            - text: mutable
              type: word
            type: choice
          type: parenthesized_rule
        type: seq
      type: rule
    script:
      children:
      - children:
        - children:
          - text: 'ref mut '
            type: string_content
          type: string
        expression:
          children:
          - text: 'ref mut '
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: state
          type: word
        - text: ref
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - children:
          - text: 'ref '
            type: string_content
          type: string
        expression:
          children:
          - text: 'ref '
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - text: ref
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - children:
          - text: 'ref '
            type: string_content
          type: string
        expression:
          children:
          - text: 'ref '
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: state
          type: word
        - text: trait
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - children:
          - text: 'trait '
            type: string_content
          type: string
        expression:
          children:
          - text: 'trait '
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - text: trait
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - children:
          - text: 'trait '
            type: string_content
          type: string
        expression:
          children:
          - text: 'trait '
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: state
          type: word
        - text: match
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - action_name:
            text: user.code_state_switch
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_state_switch
            type: identifier
          - children: []
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_state_switch
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_state_switch
            type: identifier
          - children: []
            type: argument_list
          type: action
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - text: match
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - action_name:
            text: user.code_state_switch
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_state_switch
            type: identifier
          - children: []
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_state_switch
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_state_switch
            type: identifier
          - children: []
            type: argument_list
          type: action
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: state
          type: word
        - children:
          - children:
            - text: some
              type: word
            - text: sum
              type: word
            type: choice
          type: parenthesized_rule
        type: seq
      type: rule
    - children:
      - children:
        - children:
          - text: Some
            type: string_content
          type: string
        expression:
          children:
          - text: Some
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - children:
          - children:
            - text: some
              type: word
            - text: sum
              type: word
            type: choice
          type: parenthesized_rule
        type: seq
      type: rule
    script:
      children:
      - children:
        - children:
          - text: Some
            type: string_content
          type: string
        expression:
          children:
          - text: Some
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: state
          type: word
        - text: static
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - children:
          - text: 'static '
            type: string_content
          type: string
        expression:
          children:
          - text: 'static '
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - text: static
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - children:
          - text: 'static '
            type: string_content
          type: string
        expression:
          children:
          - text: 'static '
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: self
          type: word
        - text: taught
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - children:
          - text: self.
            type: string_content
          type: string
        expression:
          children:
          - text: self.
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: self
          type: word
        - text: taught
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - children:
          - text: self.
            type: string_content
          type: string
        expression:
          children:
          - text: self.
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: state
          type: word
        - text: use
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - action_name:
            text: user.code_import
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_import
            type: identifier
          - children: []
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_import
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_import
            type: identifier
          - children: []
            type: argument_list
          type: action
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - text: use
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - action_name:
            text: user.code_import
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_import
            type: identifier
          - children: []
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_import
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_import
            type: identifier
          - children: []
            type: argument_list
          type: action
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: use
          type: word
        - capture_name:
            text: user.code_libraries
            type: identifier
          children:
          - text: user.code_libraries
            type: identifier
          type: capture
        type: seq
      type: rule
    - children:
      - children:
        - action_name:
            text: user.code_insert_library
            type: identifier
          arguments:
            children:
            - children:
              - text: code_libraries
                type: identifier
              type: variable
              variable_name:
                text: code_libraries
                type: identifier
            - children: []
              type: string
            type: argument_list
          children:
          - text: user.code_insert_library
            type: identifier
          - children:
            - children:
              - text: code_libraries
                type: identifier
              type: variable
              variable_name:
                text: code_libraries
                type: identifier
            - children: []
              type: string
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_insert_library
            type: identifier
          arguments:
            children:
            - children:
              - text: code_libraries
                type: identifier
              type: variable
              variable_name:
                text: code_libraries
                type: identifier
            - children: []
              type: string
            type: argument_list
          children:
          - text: user.code_insert_library
            type: identifier
          - children:
            - children:
              - text: code_libraries
                type: identifier
              type: variable
              variable_name:
                text: code_libraries
                type: identifier
            - children: []
              type: string
            type: argument_list
          type: action
        type: expression
      - children:
        - arguments:
            text: semicolon enter
            type: implicit_string
          children:
          - text: semicolon enter
            type: implicit_string
          type: key_action
        expression:
          arguments:
            text: semicolon enter
            type: implicit_string
          children:
          - text: semicolon enter
            type: implicit_string
          type: key_action
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: use
          type: word
        - capture_name:
            text: user.code_libraries
            type: identifier
          children:
          - text: user.code_libraries
            type: identifier
          type: capture
        type: seq
      type: rule
    script:
      children:
      - children:
        - action_name:
            text: user.code_insert_library
            type: identifier
          arguments:
            children:
            - children:
              - text: code_libraries
                type: identifier
              type: variable
              variable_name:
                text: code_libraries
                type: identifier
            - children: []
              type: string
            type: argument_list
          children:
          - text: user.code_insert_library
            type: identifier
          - children:
            - children:
              - text: code_libraries
                type: identifier
              type: variable
              variable_name:
                text: code_libraries
                type: identifier
            - children: []
              type: string
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_insert_library
            type: identifier
          arguments:
            children:
            - children:
              - text: code_libraries
                type: identifier
              type: variable
              variable_name:
                text: code_libraries
                type: identifier
            - children: []
              type: string
            type: argument_list
          children:
          - text: user.code_insert_library
            type: identifier
          - children:
            - children:
              - text: code_libraries
                type: identifier
              type: variable
              variable_name:
                text: code_libraries
                type: identifier
            - children: []
              type: string
            type: argument_list
          type: action
        type: expression
      - children:
        - arguments:
            text: semicolon enter
            type: implicit_string
          children:
          - text: semicolon enter
            type: implicit_string
          type: key_action
        expression:
          arguments:
            text: semicolon enter
            type: implicit_string
          children:
          - text: semicolon enter
            type: implicit_string
          type: key_action
        type: expression
      type: block
    type: command
  - text: '## specialist flow control'
    type: comment
  - children:
    - children:
      - children:
        - text: state
          type: word
        - text: if
          type: word
        - text: let
          type: word
        - text: some
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - action_name:
            text: user.code_insert_if_let_some
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_insert_if_let_some
            type: identifier
          - children: []
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_insert_if_let_some
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_insert_if_let_some
            type: identifier
          - children: []
            type: argument_list
          type: action
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - text: if
          type: word
        - text: let
          type: word
        - text: some
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - action_name:
            text: user.code_insert_if_let_some
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_insert_if_let_some
            type: identifier
          - children: []
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_insert_if_let_some
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_insert_if_let_some
            type: identifier
          - children: []
            type: argument_list
          type: action
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: state
          type: word
        - text: if
          type: word
        - text: let
          type: word
        - text: error
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - action_name:
            text: user.code_insert_if_let_error
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_insert_if_let_error
            type: identifier
          - children: []
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_insert_if_let_error
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_insert_if_let_error
            type: identifier
          - children: []
            type: argument_list
          type: action
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: state
          type: word
        - text: if
          type: word
        - text: let
          type: word
        - text: error
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - action_name:
            text: user.code_insert_if_let_error
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_insert_if_let_error
            type: identifier
          - children: []
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_insert_if_let_error
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_insert_if_let_error
            type: identifier
          - children: []
            type: argument_list
          type: action
        type: expression
      type: block
    type: command
  - text: '## rust centric synonyms'
    type: comment
  - children:
    - children:
      - children:
        - text: is
          type: word
        - text: some
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - action_name:
            text: user.code_insert_is_not_null
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_insert_is_not_null
            type: identifier
          - children: []
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_insert_is_not_null
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_insert_is_not_null
            type: identifier
          - children: []
            type: argument_list
          type: action
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: is
          type: word
        - text: some
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - action_name:
            text: user.code_insert_is_not_null
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_insert_is_not_null
            type: identifier
          - children: []
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_insert_is_not_null
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_insert_is_not_null
            type: identifier
          - children: []
            type: argument_list
          type: action
        type: expression
      type: block
    type: command
  - text: '## for implementing'
    type: comment
  - children:
    - children:
      - children:
        - text: implement
          type: word
        - children:
          - children:
            - text: struct
              type: word
            - text: structure
              type: word
            type: choice
          type: parenthesized_rule
        type: seq
      type: rule
    - children:
      - children:
        - action_name:
            text: user.code_state_implements
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_state_implements
            type: identifier
          - children: []
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_state_implements
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_state_implements
            type: identifier
          - children: []
            type: argument_list
          type: action
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: implement
          type: word
        - children:
          - children:
            - text: struct
              type: word
            - text: structure
              type: word
            type: choice
          type: parenthesized_rule
        type: seq
      type: rule
    script:
      children:
      - children:
        - action_name:
            text: user.code_state_implements
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_state_implements
            type: identifier
          - children: []
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_state_implements
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_state_implements
            type: identifier
          - children: []
            type: argument_list
          type: action
        type: expression
      type: block
    type: command
  - text: '## for annotating function parameters'
    type: comment
  - children:
    - children:
      - children:
        - text: is
          type: word
        - text: implemented
          type: word
        - text: trait
          type: word
        - children:
          - text: user.code_trait
            type: identifier
          list_name:
            text: user.code_trait
            type: identifier
          type: list
        type: seq
      type: rule
    - children:
      - children:
        - action_name:
            text: user.code_insert_trait_annotation
            type: identifier
          arguments:
            children:
            - children:
              - text: code_trait
                type: identifier
              type: variable
              variable_name:
                text: code_trait
                type: identifier
            type: argument_list
          children:
          - text: user.code_insert_trait_annotation
            type: identifier
          - children:
            - children:
              - text: code_trait
                type: identifier
              type: variable
              variable_name:
                text: code_trait
                type: identifier
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_insert_trait_annotation
            type: identifier
          arguments:
            children:
            - children:
              - text: code_trait
                type: identifier
              type: variable
              variable_name:
                text: code_trait
                type: identifier
            type: argument_list
          children:
          - text: user.code_insert_trait_annotation
            type: identifier
          - children:
            - children:
              - text: code_trait
                type: identifier
              type: variable
              variable_name:
                text: code_trait
                type: identifier
            type: argument_list
          type: action
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: is
          type: word
        - text: implemented
          type: word
        - text: trait
          type: word
        - children:
          - text: user.code_trait
            type: identifier
          list_name:
            text: user.code_trait
            type: identifier
          type: list
        type: seq
      type: rule
    script:
      children:
      - children:
        - action_name:
            text: user.code_insert_trait_annotation
            type: identifier
          arguments:
            children:
            - children:
              - text: code_trait
                type: identifier
              type: variable
              variable_name:
                text: code_trait
                type: identifier
            type: argument_list
          children:
          - text: user.code_insert_trait_annotation
            type: identifier
          - children:
            - children:
              - text: code_trait
                type: identifier
              type: variable
              variable_name:
                text: code_trait
                type: identifier
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_insert_trait_annotation
            type: identifier
          arguments:
            children:
            - children:
              - text: code_trait
                type: identifier
              type: variable
              variable_name:
                text: code_trait
                type: identifier
            type: argument_list
          children:
          - text: user.code_insert_trait_annotation
            type: identifier
          - children:
            - children:
              - text: code_trait
                type: identifier
              type: variable
              variable_name:
                text: code_trait
                type: identifier
            type: argument_list
          type: action
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: is
          type: word
        - text: implemented
          type: word
        - text: trait
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - children:
          - text: ': impl '
            type: string_content
          type: string
        expression:
          children:
          - text: ': impl '
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: is
          type: word
        - text: implemented
          type: word
        - text: trait
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - children:
          - text: ': impl '
            type: string_content
          type: string
        expression:
          children:
          - text: ': impl '
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: returns
          type: word
        - text: implemented
          type: word
        - text: trait
          type: word
        - children:
          - text: user.code_trait
            type: identifier
          list_name:
            text: user.code_trait
            type: identifier
          type: list
        type: seq
      type: rule
    - children:
      - children:
        - action_name:
            text: user.code_insert_return_trait
            type: identifier
          arguments:
            children:
            - children:
              - text: code_trait
                type: identifier
              type: variable
              variable_name:
                text: code_trait
                type: identifier
            type: argument_list
          children:
          - text: user.code_insert_return_trait
            type: identifier
          - children:
            - children:
              - text: code_trait
                type: identifier
              type: variable
              variable_name:
                text: code_trait
                type: identifier
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_insert_return_trait
            type: identifier
          arguments:
            children:
            - children:
              - text: code_trait
                type: identifier
              type: variable
              variable_name:
                text: code_trait
                type: identifier
            type: argument_list
          children:
          - text: user.code_insert_return_trait
            type: identifier
          - children:
            - children:
              - text: code_trait
                type: identifier
              type: variable
              variable_name:
                text: code_trait
                type: identifier
            type: argument_list
          type: action
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: returns
          type: word
        - text: implemented
          type: word
        - text: trait
          type: word
        - children:
          - text: user.code_trait
            type: identifier
          list_name:
            text: user.code_trait
            type: identifier
          type: list
        type: seq
      type: rule
    script:
      children:
      - children:
        - action_name:
            text: user.code_insert_return_trait
            type: identifier
          arguments:
            children:
            - children:
              - text: code_trait
                type: identifier
              type: variable
              variable_name:
                text: code_trait
                type: identifier
            type: argument_list
          children:
          - text: user.code_insert_return_trait
            type: identifier
          - children:
            - children:
              - text: code_trait
                type: identifier
              type: variable
              variable_name:
                text: code_trait
                type: identifier
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_insert_return_trait
            type: identifier
          arguments:
            children:
            - children:
              - text: code_trait
                type: identifier
              type: variable
              variable_name:
                text: code_trait
                type: identifier
            type: argument_list
          children:
          - text: user.code_insert_return_trait
            type: identifier
          - children:
            - children:
              - text: code_trait
                type: identifier
              type: variable
              variable_name:
                text: code_trait
                type: identifier
            type: argument_list
          type: action
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: returns
          type: word
        - text: implemented
          type: word
        - text: trait
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - children:
          - text: ' -> impl '
            type: string_content
          type: string
        expression:
          children:
          - text: ' -> impl '
            type: string_content
          type: string
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: returns
          type: word
        - text: implemented
          type: word
        - text: trait
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - children:
          - text: ' -> impl '
            type: string_content
          type: string
        expression:
          children:
          - text: ' -> impl '
            type: string_content
          type: string
        type: expression
      type: block
    type: command
  - text: '## for generic reference of traits'
    type: comment
  - children:
    - children:
      - children:
        - text: trait
          type: word
        - children:
          - text: user.code_trait
            type: identifier
          list_name:
            text: user.code_trait
            type: identifier
          type: list
        type: seq
      type: rule
    - children:
      - children:
        - action_name:
            text: insert
            type: identifier
          arguments:
            children:
            - children:
              - text: '{'
                type: string_content
              - text: code_trait
                type: string_content
              - text: '}'
                type: string_content
              type: string
            type: argument_list
          children:
          - text: insert
            type: identifier
          - children:
            - children:
              - text: '{'
                type: string_content
              - text: code_trait
                type: string_content
              - text: '}'
                type: string_content
              type: string
            type: argument_list
          type: action
        expression:
          action_name:
            text: insert
            type: identifier
          arguments:
            children:
            - children:
              - text: '{'
                type: string_content
              - text: code_trait
                type: string_content
              - text: '}'
                type: string_content
              type: string
            type: argument_list
          children:
          - text: insert
            type: identifier
          - children:
            - children:
              - text: '{'
                type: string_content
              - text: code_trait
                type: string_content
              - text: '}'
                type: string_content
              type: string
            type: argument_list
          type: action
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: trait
          type: word
        - children:
          - text: user.code_trait
            type: identifier
          list_name:
            text: user.code_trait
            type: identifier
          type: list
        type: seq
      type: rule
    script:
      children:
      - children:
        - action_name:
            text: insert
            type: identifier
          arguments:
            children:
            - children:
              - text: '{'
                type: string_content
              - text: code_trait
                type: string_content
              - text: '}'
                type: string_content
              type: string
            type: argument_list
          children:
          - text: insert
            type: identifier
          - children:
            - children:
              - text: '{'
                type: string_content
              - text: code_trait
                type: string_content
              - text: '}'
                type: string_content
              type: string
            type: argument_list
          type: action
        expression:
          action_name:
            text: insert
            type: identifier
          arguments:
            children:
            - children:
              - text: '{'
                type: string_content
              - text: code_trait
                type: string_content
              - text: '}'
                type: string_content
              type: string
            type: argument_list
          children:
          - text: insert
            type: identifier
          - children:
            - children:
              - text: '{'
                type: string_content
              - text: code_trait
                type: string_content
              - text: '}'
                type: string_content
              type: string
            type: argument_list
          type: action
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: implemented
          type: word
        - text: trait
          type: word
        - children:
          - text: user.code_trait
            type: identifier
          list_name:
            text: user.code_trait
            type: identifier
          type: list
        type: seq
      type: rule
    - children:
      - children:
        - action_name:
            text: insert
            type: identifier
          arguments:
            children:
            - children:
              - text: 'impl '
                type: string_content
              - text: '{'
                type: string_content
              - text: code_trait
                type: string_content
              - text: '}'
                type: string_content
              type: string
            type: argument_list
          children:
          - text: insert
            type: identifier
          - children:
            - children:
              - text: 'impl '
                type: string_content
              - text: '{'
                type: string_content
              - text: code_trait
                type: string_content
              - text: '}'
                type: string_content
              type: string
            type: argument_list
          type: action
        expression:
          action_name:
            text: insert
            type: identifier
          arguments:
            children:
            - children:
              - text: 'impl '
                type: string_content
              - text: '{'
                type: string_content
              - text: code_trait
                type: string_content
              - text: '}'
                type: string_content
              type: string
            type: argument_list
          children:
          - text: insert
            type: identifier
          - children:
            - children:
              - text: 'impl '
                type: string_content
              - text: '{'
                type: string_content
              - text: code_trait
                type: string_content
              - text: '}'
                type: string_content
              type: string
            type: argument_list
          type: action
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: implemented
          type: word
        - text: trait
          type: word
        - children:
          - text: user.code_trait
            type: identifier
          list_name:
            text: user.code_trait
            type: identifier
          type: list
        type: seq
      type: rule
    script:
      children:
      - children:
        - action_name:
            text: insert
            type: identifier
          arguments:
            children:
            - children:
              - text: 'impl '
                type: string_content
              - text: '{'
                type: string_content
              - text: code_trait
                type: string_content
              - text: '}'
                type: string_content
              type: string
            type: argument_list
          children:
          - text: insert
            type: identifier
          - children:
            - children:
              - text: 'impl '
                type: string_content
              - text: '{'
                type: string_content
              - text: code_trait
                type: string_content
              - text: '}'
                type: string_content
              type: string
            type: argument_list
          type: action
        expression:
          action_name:
            text: insert
            type: identifier
          arguments:
            children:
            - children:
              - text: 'impl '
                type: string_content
              - text: '{'
                type: string_content
              - text: code_trait
                type: string_content
              - text: '}'
                type: string_content
              type: string
            type: argument_list
          children:
          - text: insert
            type: identifier
          - children:
            - children:
              - text: 'impl '
                type: string_content
              - text: '{'
                type: string_content
              - text: code_trait
                type: string_content
              - text: '}'
                type: string_content
              type: string
            type: argument_list
          type: action
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: dynamic
          type: word
        - text: trait
          type: word
        - children:
          - text: user.code_trait
            type: identifier
          list_name:
            text: user.code_trait
            type: identifier
          type: list
        type: seq
      type: rule
    - children:
      - children:
        - action_name:
            text: insert
            type: identifier
          arguments:
            children:
            - children:
              - text: 'dyn '
                type: string_content
              - text: '{'
                type: string_content
              - text: code_trait
                type: string_content
              - text: '}'
                type: string_content
              type: string
            type: argument_list
          children:
          - text: insert
            type: identifier
          - children:
            - children:
              - text: 'dyn '
                type: string_content
              - text: '{'
                type: string_content
              - text: code_trait
                type: string_content
              - text: '}'
                type: string_content
              type: string
            type: argument_list
          type: action
        expression:
          action_name:
            text: insert
            type: identifier
          arguments:
            children:
            - children:
              - text: 'dyn '
                type: string_content
              - text: '{'
                type: string_content
              - text: code_trait
                type: string_content
              - text: '}'
                type: string_content
              type: string
            type: argument_list
          children:
          - text: insert
            type: identifier
          - children:
            - children:
              - text: 'dyn '
                type: string_content
              - text: '{'
                type: string_content
              - text: code_trait
                type: string_content
              - text: '}'
                type: string_content
              type: string
            type: argument_list
          type: action
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: dynamic
          type: word
        - text: trait
          type: word
        - children:
          - text: user.code_trait
            type: identifier
          list_name:
            text: user.code_trait
            type: identifier
          type: list
        type: seq
      type: rule
    script:
      children:
      - children:
        - action_name:
            text: insert
            type: identifier
          arguments:
            children:
            - children:
              - text: 'dyn '
                type: string_content
              - text: '{'
                type: string_content
              - text: code_trait
                type: string_content
              - text: '}'
                type: string_content
              type: string
            type: argument_list
          children:
          - text: insert
            type: identifier
          - children:
            - children:
              - text: 'dyn '
                type: string_content
              - text: '{'
                type: string_content
              - text: code_trait
                type: string_content
              - text: '}'
                type: string_content
              type: string
            type: argument_list
          type: action
        expression:
          action_name:
            text: insert
            type: identifier
          arguments:
            children:
            - children:
              - text: 'dyn '
                type: string_content
              - text: '{'
                type: string_content
              - text: code_trait
                type: string_content
              - text: '}'
                type: string_content
              type: string
            type: argument_list
          children:
          - text: insert
            type: identifier
          - children:
            - children:
              - text: 'dyn '
                type: string_content
              - text: '{'
                type: string_content
              - text: code_trait
                type: string_content
              - text: '}'
                type: string_content
              type: string
            type: argument_list
          type: action
        type: expression
      type: block
    type: command
  - text: '## for generic reference of macro'
    type: comment
  - children:
    - children:
      - children:
        - text: macro
          type: word
        - children:
          - text: user.code_macros
            type: identifier
          list_name:
            text: user.code_macros
            type: identifier
          type: list
        type: seq
      type: rule
    - children:
      - children:
        - action_name:
            text: user.code_insert_macro
            type: identifier
          arguments:
            children:
            - children:
              - text: code_macros
                type: identifier
              type: variable
              variable_name:
                text: code_macros
                type: identifier
            - children: []
              type: string
            type: argument_list
          children:
          - text: user.code_insert_macro
            type: identifier
          - children:
            - children:
              - text: code_macros
                type: identifier
              type: variable
              variable_name:
                text: code_macros
                type: identifier
            - children: []
              type: string
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_insert_macro
            type: identifier
          arguments:
            children:
            - children:
              - text: code_macros
                type: identifier
              type: variable
              variable_name:
                text: code_macros
                type: identifier
            - children: []
              type: string
            type: argument_list
          children:
          - text: user.code_insert_macro
            type: identifier
          - children:
            - children:
              - text: code_macros
                type: identifier
              type: variable
              variable_name:
                text: code_macros
                type: identifier
            - children: []
              type: string
            type: argument_list
          type: action
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: macro
          type: word
        - children:
          - text: user.code_macros
            type: identifier
          list_name:
            text: user.code_macros
            type: identifier
          type: list
        type: seq
      type: rule
    script:
      children:
      - children:
        - action_name:
            text: user.code_insert_macro
            type: identifier
          arguments:
            children:
            - children:
              - text: code_macros
                type: identifier
              type: variable
              variable_name:
                text: code_macros
                type: identifier
            - children: []
              type: string
            type: argument_list
          children:
          - text: user.code_insert_macro
            type: identifier
          - children:
            - children:
              - text: code_macros
                type: identifier
              type: variable
              variable_name:
                text: code_macros
                type: identifier
            - children: []
              type: string
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_insert_macro
            type: identifier
          arguments:
            children:
            - children:
              - text: code_macros
                type: identifier
              type: variable
              variable_name:
                text: code_macros
                type: identifier
            - children: []
              type: string
            type: argument_list
          children:
          - text: user.code_insert_macro
            type: identifier
          - children:
            - children:
              - text: code_macros
                type: identifier
              type: variable
              variable_name:
                text: code_macros
                type: identifier
            - children: []
              type: string
            type: argument_list
          type: action
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: macro
          type: word
        - text: wrap
          type: word
        - children:
          - text: user.code_macros
            type: identifier
          list_name:
            text: user.code_macros
            type: identifier
          type: list
        type: seq
      type: rule
    - children:
      - children:
        - action_name:
            text: user.code_insert_macro
            type: identifier
          arguments:
            children:
            - children:
              - text: code_macros
                type: identifier
              type: variable
              variable_name:
                text: code_macros
                type: identifier
            - action_name:
                text: edit.selected_text
                type: identifier
              arguments:
                children: []
                type: argument_list
              children:
              - text: edit.selected_text
                type: identifier
              - children: []
                type: argument_list
              type: action
            type: argument_list
          children:
          - text: user.code_insert_macro
            type: identifier
          - children:
            - children:
              - text: code_macros
                type: identifier
              type: variable
              variable_name:
                text: code_macros
                type: identifier
            - action_name:
                text: edit.selected_text
                type: identifier
              arguments:
                children: []
                type: argument_list
              children:
              - text: edit.selected_text
                type: identifier
              - children: []
                type: argument_list
              type: action
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_insert_macro
            type: identifier
          arguments:
            children:
            - children:
              - text: code_macros
                type: identifier
              type: variable
              variable_name:
                text: code_macros
                type: identifier
            - action_name:
                text: edit.selected_text
                type: identifier
              arguments:
                children: []
                type: argument_list
              children:
              - text: edit.selected_text
                type: identifier
              - children: []
                type: argument_list
              type: action
            type: argument_list
          children:
          - text: user.code_insert_macro
            type: identifier
          - children:
            - children:
              - text: code_macros
                type: identifier
              type: variable
              variable_name:
                text: code_macros
                type: identifier
            - action_name:
                text: edit.selected_text
                type: identifier
              arguments:
                children: []
                type: argument_list
              children:
              - text: edit.selected_text
                type: identifier
              - children: []
                type: argument_list
              type: action
            type: argument_list
          type: action
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: macro
          type: word
        - text: wrap
          type: word
        - children:
          - text: user.code_macros
            type: identifier
          list_name:
            text: user.code_macros
            type: identifier
          type: list
        type: seq
      type: rule
    script:
      children:
      - children:
        - action_name:
            text: user.code_insert_macro
            type: identifier
          arguments:
            children:
            - children:
              - text: code_macros
                type: identifier
              type: variable
              variable_name:
                text: code_macros
                type: identifier
            - action_name:
                text: edit.selected_text
                type: identifier
              arguments:
                children: []
                type: argument_list
              children:
              - text: edit.selected_text
                type: identifier
              - children: []
                type: argument_list
              type: action
            type: argument_list
          children:
          - text: user.code_insert_macro
            type: identifier
          - children:
            - children:
              - text: code_macros
                type: identifier
              type: variable
              variable_name:
                text: code_macros
                type: identifier
            - action_name:
                text: edit.selected_text
                type: identifier
              arguments:
                children: []
                type: argument_list
              children:
              - text: edit.selected_text
                type: identifier
              - children: []
                type: argument_list
              type: action
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_insert_macro
            type: identifier
          arguments:
            children:
            - children:
              - text: code_macros
                type: identifier
              type: variable
              variable_name:
                text: code_macros
                type: identifier
            - action_name:
                text: edit.selected_text
                type: identifier
              arguments:
                children: []
                type: argument_list
              children:
              - text: edit.selected_text
                type: identifier
              - children: []
                type: argument_list
              type: action
            type: argument_list
          children:
          - text: user.code_insert_macro
            type: identifier
          - children:
            - children:
              - text: code_macros
                type: identifier
              type: variable
              variable_name:
                text: code_macros
                type: identifier
            - action_name:
                text: edit.selected_text
                type: identifier
              arguments:
                children: []
                type: argument_list
              children:
              - text: edit.selected_text
                type: identifier
              - children: []
                type: argument_list
              type: action
            type: argument_list
          type: action
        type: expression
      type: block
    type: command
  - text: '## rust specific document comments'
    type: comment
  - children:
    - children:
      - children:
        - text: block
          type: word
        - text: dock
          type: word
        - text: comment
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - action_name:
            text: user.code_comment_documentation_block
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_comment_documentation_block
            type: identifier
          - children: []
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_comment_documentation_block
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_comment_documentation_block
            type: identifier
          - children: []
            type: argument_list
          type: action
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: block
          type: word
        - text: dock
          type: word
        - text: comment
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - action_name:
            text: user.code_comment_documentation_block
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_comment_documentation_block
            type: identifier
          - children: []
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_comment_documentation_block
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_comment_documentation_block
            type: identifier
          - children: []
            type: argument_list
          type: action
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: inner
          type: word
        - text: dock
          type: word
        - text: comment
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - action_name:
            text: user.code_comment_documentation_inner
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_comment_documentation_inner
            type: identifier
          - children: []
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_comment_documentation_inner
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_comment_documentation_inner
            type: identifier
          - children: []
            type: argument_list
          type: action
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: inner
          type: word
        - text: dock
          type: word
        - text: comment
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - action_name:
            text: user.code_comment_documentation_inner
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_comment_documentation_inner
            type: identifier
          - children: []
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_comment_documentation_inner
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_comment_documentation_inner
            type: identifier
          - children: []
            type: argument_list
          type: action
        type: expression
      type: block
    type: command
  - children:
    - children:
      - children:
        - text: inner
          type: word
        - text: block
          type: word
        - text: dock
          type: word
        - text: comment
          type: word
        type: seq
      type: rule
    - children:
      - children:
        - action_name:
            text: user.code_comment_documentation_block_inner
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_comment_documentation_block_inner
            type: identifier
          - children: []
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_comment_documentation_block_inner
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_comment_documentation_block_inner
            type: identifier
          - children: []
            type: argument_list
          type: action
        type: expression
      type: block
    rule:
      children:
      - children:
        - text: inner
          type: word
        - text: block
          type: word
        - text: dock
          type: word
        - text: comment
          type: word
        type: seq
      type: rule
    script:
      children:
      - children:
        - action_name:
            text: user.code_comment_documentation_block_inner
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_comment_documentation_block_inner
            type: identifier
          - children: []
            type: argument_list
          type: action
        expression:
          action_name:
            text: user.code_comment_documentation_block_inner
            type: identifier
          arguments:
            children: []
            type: argument_list
          children:
          - text: user.code_comment_documentation_block_inner
            type: identifier
          - children: []
            type: argument_list
          type: action
        type: expression
      type: block
    type: command
  type: source_file
